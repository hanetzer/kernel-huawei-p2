/*
 *  sonyimx091 camera driver head file
 *
 *  CopyRight (C) Hisilicon Co., Ltd.
 *	Author :
 *  Version:  1.2
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef _SONYIMX091_H
#define _SONYIMX091_H


#include "../isp/k3_isp_io.h"
/***********************************************************************
 *
 * sonyimx091 init sensor registers list
 *
 ***********************************************************************/
/* default is 1600*1200 9fps 2lane */
const struct _sensor_reg_t sonyimx091_init_regs[] = {
	//global setting
	{0x3087,0x53},
	{0x309D,0x94},
	{0x30A1,0x08},
	{0x30C7,0x00},
	{0x3115,0x0E},
	{0x3118,0x42},
	{0x311D,0x34},
	{0x3121,0x0D},
	{0x3212,0xF2},
	{0x3213,0x0F},
	{0x3215,0x0F},
	{0x3217,0x0B},
	{0x3219,0x0B},
	{0x321B,0x0D},
	{0x321D,0x0D},
	//black level setting
	{0x3032,0x40},
};


/*1600x1200 24fps*/
const struct _sensor_reg_t sonyimx091_framesize_1280x720[] = {
{0x0100, 0x00}, //stand by
//PLL setting
{0x0305,0x02},
{0x0307,0x38},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x06},
{0x0341,0x50},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x00},
{0x0345,0xC0},
{0x0346,0x02},
{0x0347,0x10},
{0x0348,0x0F},
{0x0349,0xBF},
{0x034A,0x0A},
{0x034B,0x7F},
{0x034C,0x05},
{0x034D,0x00},
{0x034E,0x02},
{0x034F,0xD0},
{0x0381,0x03},
{0x0383,0x03},
{0x0385,0x03},
{0x0387,0x03},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x02},
{0x3064,0x12},
{0x309B,0x60},
{0x309E,0x04},
{0x30D5,0x09},
{0x30D6,0x00},
{0x30D7,0x00},
{0x30D8,0x00},
{0x30D9,0x89},
{0x30DE,0x03},
{0x3102,0x09},
{0x3103,0x23},
{0x3104,0x24},
{0x3105,0x00},
{0x3106,0x8B},
{0x3107,0x00},
{0x310A,0x0A},
{0x315C,0x4A},
{0x315D,0x49},
{0x316E,0x4B},
{0x316F,0x4A},
{0x3318,0x6A},
{0x0101,0x03},// horizontal and vertical inversion
{0x0100,0x01},// stream on
};

/*RES_2560x1440*/
const struct _sensor_reg_t sonyimx091_framesize_1280_960[] = {
{0x0100, 0x00}, //stand by
	//PLL setting
{0x0305,0x02},
{0x0307,0x38},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x06},
{0x0341,0x50},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x00},
{0x0345,0xC0},
{0x0346,0x00},
{0x0347,0xA8},
{0x0348,0x0F},
{0x0349,0xBF},
{0x034A,0x0B},
{0x034B,0xE7},
{0x034C,0x05},
{0x034D,0x00},
{0x034E,0x03},
{0x034F,0xC0},
{0x0381,0x03},
{0x0383,0x03},
{0x0385,0x03},
{0x0387,0x03},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x22},
{0x3064,0x12},
{0x309B,0x60},
{0x309E,0x04},
{0x30D5,0x09},
{0x30D6,0x00},
{0x30D7,0x00},
{0x30D8,0x00},
{0x30D9,0x89},
{0x30DE,0x03},
{0x3102,0x09},
{0x3103,0x23},
{0x3104,0x24},
{0x3105,0x00},
{0x3106,0x8B},
{0x3107,0x00},
{0x310A,0x0A},
{0x315C,0x4A},
{0x315D,0x49},
{0x316E,0x4B},
{0x316F,0x4A},
{0x3318,0x6A},
{0x0101,0x03},// horizontal and vertical inversion
{0x0100,0x01},// stream on
};

/*RES_3280x2464 full size, 30fps */
const struct _sensor_reg_t sonyimx091_framesize_1080p_wide[] = {
{0x0100, 0x00}, //stand by
	/*full size  15fps*/
	//PLL setting
{0x0305,0x02},
{0x0307,0x38},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x06},
{0x0341,0x50},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x00},
{0x0345,0xC0},
{0x0346,0x02},
{0x0347,0x10},
{0x0348,0x0F},
{0x0349,0xBF},
{0x034A,0x0A},
{0x034B,0x7F},
{0x034C,0x07},
{0x034D,0x80},
{0x034E,0x04},
{0x034F,0x38},
{0x0381,0x01},
{0x0383,0x03},
{0x0385,0x01},
{0x0387,0x03},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x01},
{0x3064,0x12},
{0x309B,0x28},
{0x309E,0x00},
{0x30D5,0x09},
{0x30D6,0x01},
{0x30D7,0x01},
{0x30D8,0x64},
{0x30D9,0x89},
{0x30DE,0x02},
{0x3102,0x10},
{0x3103,0x44},
{0x3104,0x40},
{0x3105,0x00},
{0x3106,0x0D},
{0x3107,0x01},
{0x310A,0x0A},
{0x315C,0x99},
{0x315D,0x98},
{0x316E,0x9A},
{0x316F,0x99},
{0x3318,0x73},
{0x0101,0x03},// horizontal and vertical inversion
{0x0100,0x01},// stream on
};

/*RES_2104x1560 1/4 size, 30fps */
const struct _sensor_reg_t sonyimx091_framesize_2104_1560[] = {
{0x0100, 0x00}, //stand by
	//PLL setting
{0x0305,0x02},
{0x0307,0x38},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x06},
{0x0341,0x50},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x00},
{0x0345,0x08},
{0x0346,0x00},
{0x0347,0x30},
{0x0348,0x10},
{0x0349,0x77},
{0x034A,0x0C},
{0x034B,0x5F},
{0x034C,0x08},
{0x034D,0x38},
{0x034E,0x06},
{0x034F,0x18},
{0x0381,0x01},
{0x0383,0x03},
{0x0385,0x01},
{0x0387,0x03},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x22},
{0x3064,0x12},
{0x309B,0x60},
{0x309E,0x04},
{0x30D5,0x09},
{0x30D6,0x01},
{0x30D7,0x01},
{0x30D8,0x64},
{0x30D9,0x89},
{0x30DE,0x02},
{0x3102,0x09},
{0x3103,0x23},
{0x3104,0x24},
{0x3105,0x00},
{0x3106,0x8B},
{0x3107,0x00},
{0x310A,0x0A},
{0x315C,0x4A},
{0x315D,0x49},
{0x316E,0x4B},
{0x316F,0x4A},
{0x3318,0x73},
{0x0101,0x03},
{0x0100,0x01},
};


/*RES_3264x2464 size, 15fps */
const struct _sensor_reg_t sonyimx091_framesize_3280_2464[] = {
{0x0100, 0x00}, //stand by
	/*full size  15fps*/
{0x0305,0x02},
{0x0307,0x36},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x0C},
{0x0341,0xA0},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x01},
{0x0345,0xD8},
{0x0346,0x01},
{0x0347,0x78},
{0x0348,0x0E},
{0x0349,0xA7},
{0x034A,0x0B},
{0x034B,0x17},
{0x034C,0x0C},
{0x034D,0xD0},
{0x034E,0x09},
{0x034F,0xA0},
{0x0381,0x01},
{0x0383,0x01},
{0x0385,0x01},
{0x0387,0x01},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x00},
{0x3064,0x12},
{0x309B,0x20},
{0x309E,0x00},
{0x30D5,0x00},
{0x30D6,0x85},
{0x30D7,0x2A},
{0x30D8,0x64},
{0x30D9,0x89},
{0x30DE,0x00},
{0x3102,0x10},
{0x3103,0x44},
{0x3104,0x40},
{0x3105,0x00},
{0x3106,0x0D},
{0x3107,0x01},
{0x310A,0x0A},
{0x315C,0x99},
{0x315D,0x98},
{0x316E,0x9A},
{0x316F,0x99},
{0x3318,0x64},
{0x0101,0x03},// horizontal and vertical inversion
{0x0100,0x01},// stream on
};


/*RES_full size es, 13fps */
const struct _sensor_reg_t sonyimx091_framesize_full[] = {
{0x0100, 0x00}, //stand by
/*full size  15fps*/
{0x0305,0x02},
{0x0307,0x2B},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x0C},
{0x0341,0xA0},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x00},
{0x0345,0x08},
{0x0346,0x00},
{0x0347,0x30},
{0x0348,0x10},
{0x0349,0x77},
{0x034A,0x0C},
{0x034B,0x5F},
{0x034C,0x10},
{0x034D,0x70},
{0x034E,0x0C},
{0x034F,0x30},
{0x0381,0x01},
{0x0383,0x01},
{0x0385,0x01},
{0x0387,0x01},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x00},
{0x3064,0x12},
{0x309B,0x20},
{0x309E,0x00},
{0x30D5,0x00},
{0x30D6,0x85},
{0x30D7,0x2A},
{0x30D8,0x64},
{0x30D9,0x89},
{0x30DE,0x00},
{0x3102,0x10},
{0x3103,0x44},
{0x3104,0x40},
{0x3105,0x00},
{0x3106,0x0D},
{0x3107,0x01},
{0x310A,0x0A},
{0x315C,0x99},
{0x315D,0x98},
{0x316E,0x9A},
{0x316F,0x99},
{0x3318,0x64},
{0x0101,0x03},// horizontal and vertical inversion
{0x0100,0x01},// stream on
};

/*RES_3264x2448 full size es, 13fps */
const struct _sensor_reg_t sonyimx091_framesize_full_es[] = {
{0x0100, 0x00}, //stand by
{0x0305,0x02},
{0x0307,0x2B},
{0x30A4,0x02},
{0x303C,0x3E},
{0x0340,0x0C},
{0x0341,0xA0},
{0x0342,0x12},
{0x0343,0x0C},
{0x0344,0x00},
{0x0345,0x08},
{0x0346,0x00},
{0x0347,0x30},
{0x0348,0x10},
{0x0349,0x77},
{0x034A,0x0C},
{0x034B,0x5F},
{0x034C,0x10},
{0x034D,0x70},
{0x034E,0x0C},
{0x034F,0x30},
{0x0381,0x01},
{0x0383,0x01},
{0x0385,0x01},
{0x0387,0x01},
{0x3040,0x08},
{0x3041,0x97},
{0x3048,0x00},
{0x3064,0x12},
{0x309B,0x20},
{0x309E,0x00},
{0x30D5,0x00},
{0x30D6,0x85},
{0x30D7,0x2A},
{0x30D8,0x64},
{0x30D9,0x89},
{0x30DE,0x00},
{0x3102,0x10},
{0x3103,0x44},
{0x3104,0x40},
{0x3105,0x00},
{0x3106,0x0D},
{0x3107,0x01},
{0x310A,0x0A},
{0x315C,0x99},
{0x315D,0x98},
{0x316E,0x9A},
{0x316F,0x99},
{0x3318,0x64},
{0x0101,0x03},// horizontal and vertical inversion
{0x0100,0x01},// stream on
};


#endif /* SONYIMX091_H_INCLUDED */

/************************** END ***************************/
