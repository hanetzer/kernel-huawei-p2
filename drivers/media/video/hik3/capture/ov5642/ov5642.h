/*
 *  ov5642 camera driver head file
 *
 *  CopyRight (C) Hisilicon Co., Ltd.
 *	Author :
 *  Version:  1.2
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef _OV5642_H
#define _OV5642_H

#include "../isp/k3_isp_io.h"

#define INVMASK(v)              (0xff-v)

/***********************************************************************
 *
 * ov5642 init sensor registers list
 *
 ***********************************************************************/

const struct _sensor_reg_t ov5642_init_regs[] = {
	{0x3103, 0x93},
	{0x3008, 0x82},
	{0x3017, 0x7f},
	{0x3018, 0xfc},
	{0x3810, 0xc2},
	{0x3615, 0xf0},
	{0x3000, 0x00},
	{0x3001, 0x00},
	{0x3002, 0x00},
	{0x3003, 0x00},
	{0x3011, 0x08},
	{0x3010, 0x30},
	{0x3604, 0x60},
	{0x3622, 0x60},
	{0x3621, 0x09},
	{0x3709, 0x00},
	{0x4000, 0x21},
	{0x401d, 0x22},
	{0x3600, 0x54},
	{0x3605, 0x04},
	{0x3606, 0x3f},
	{0x3c01, 0x80},
	{0x300d, 0x21},
	{0x3623, 0x22},
	{0x5000, 0xcf},
	{0x5020, 0x04},
	{0x5181, 0x79},
	{0x5182, 0x00},
	{0x5185, 0x22},
	{0x5197, 0x01},
	{0x5500, 0x0a},
	{0x5504, 0x00},
	{0x5505, 0x7f},
	{0x5080, 0x08},
	{0x300e, 0x18},
	{0x4610, 0x00},
	{0x471d, 0x05},
	{0x4708, 0x06},
	{0x370c, 0xa0},

	{0x3808, 0x02},
	{0x3809, 0x80},
	{0x380a, 0x01},
	{0x380b, 0xe0},
	{0x380c, 0x0c},/*hts:0x0c80=3200*/
	{0x380d, 0x80},
	{0x380e, 0x07},/*vts:2000*/
	{0x380f, 0xd0},
	{0x5000, 0x06},
	{0x501f, 0x03},
	{0x3503, 0x07},
	{0x3501, 0x73},
	{0x3502, 0x80},
	{0x350b, 0x00},
	{0x3818, 0xc0},
	{0x3824, 0x11},
	{0x3801, 0x8a},
	{0x3a00, 0x78},
	{0x3a1a, 0x04},
	{0x3a13, 0x30},
	{0x3a18, 0x00},
	{0x3a19, 0x7c},
	{0x3a08, 0x12},
	{0x3a09, 0xc0},
	{0x3a0a, 0x0f},
	{0x3a0b, 0xa0},
	{0x3004, 0xff},
	{0x350c, 0x07},
	{0x350d, 0xd0},
	{0x3a0d, 0x08},
	{0x3a0e, 0x06},
	{0x3500, 0x00},
	{0x3501, 0x0f},
	{0x3502, 0xa0},
	{0x350a, 0x00},
	{0x350b, 0x00},
	{0x3030, 0x2b},
	{0x3a02, 0x00},
	{0x3a03, 0x7d},
	{0x3a04, 0x00},
	{0x3a14, 0x00},
	{0x3a15, 0x7d},
	{0x3a16, 0x00},
	{0x3a00, 0x78},
	{0x3a08, 0x09},
	{0x3a09, 0x60},
	{0x3a0a, 0x07},
	{0x3a0b, 0xd0},
	{0x3a0d, 0x10},
	{0x3a0e, 0x0d},
	{0x589b, 0x00},
	{0x589a, 0xc0},
	{0x401e, 0x20},
	{0x4001, 0x42},
	{0x401c, 0x06},
	{0x3825, 0xac},
	{0x3827, 0x0c},
	{0x5025, 0x80},
	{0x3a0f, 0x38},
	{0x3a10, 0x30},
	{0x3a1b, 0x3a},
	{0x3a1e, 0x2e},
	{0x3a11, 0x60},
	{0x3a1f, 0x10},
	{0x3710, 0x10},
	{0x3632, 0x51},
	{0x3702, 0x10},
	{0x3703, 0xb2},
	{0x3704, 0x18},
	{0x370b, 0x40},
	{0x370d, 0x03},
	{0x3631, 0x01},
	{0x3632, 0x52},
	{0x3606, 0x24},
	{0x3620, 0x96},
	{0x5785, 0x07},
	{0x3a13, 0x30},
	{0x3600, 0x52},
	{0x3604, 0x48},
	{0x3606, 0x1b},
	{0x370d, 0x0b},
	{0x370f, 0xc0},
	{0x3709, 0x01},
	{0x3823, 0x00},
	{0x5007, 0x00},
	{0x5009, 0x00},
	{0x5011, 0x00},
	{0x5013, 0x00},
	{0x519e, 0x00},
	{0x5086, 0x00},
	{0x5087, 0x00},
	{0x5088, 0x00},
	{0x5089, 0x00},
	{0x302b, 0x00},
	{0x5000, 0x06},
	{0x5001, 0x00},
	{0x5005, 0x00},
	{0x3818, 0x80},
	{0x3621, 0x29},
	{0x3801, 0xb4},

	{0x5001, 0xfc},  /*ov5642 mwb, use k3 isp */
	{0x5589, 0x30},
	{0x5580, 0x04},
	{0x558a, 0x00},

	/* colorbar */
	/*
	   {0x503d, 0x80},
	   {0x503e, 0x00},
	 */

#ifdef OV5642_FRAME_RATE_15

	{0x300f, 0x06},
	{0x3010, 0x10},
	{0x3011, 0x08},
	{0x3012, 0x00},
	{0x380c, 0x0C},
	{0x380d, 0x80},
	{0x3815, 0x44},
	{0x460c, 0x22},
	{0x3615, 0x00},
	{0x3a08, 0x09},
	{0x3a09, 0x60},
	{0x3a0e, 0x06},
	{0x3a0a, 0x07},
	{0x3a0b, 0xd0},
	{0x3a0d, 0x08},

#endif

};

/*1296x972*/
const struct _sensor_reg_t ov5642_framesize_quarter[] = {
	{0x3002, 0x5c},
	{0x3003, 0x00},
	{0x3004, 0xff},
	{0x3005, 0xff},
	{0x3006, 0x43},
	{0x3007, 0x37},
	{0x3815, 0x04},
	{0x370c, 0xa0},
	{0x3602, 0xfc},
	{0x3612, 0xff},
	{0x3634, 0xc0},
	{0x3605, 0x7c},
	{0x3604, 0x40},
	{0x3603, 0x27},
	{0x380c, 0x0c},/*hts:can be change to 0x0640=1600, y36721*/
	{0x380d, 0x80},
	{0x380e, 0x03},/*vts:1000*/
	{0x380f, 0xe8},
	{0x3818, 0xc1},
	{0x3705, 0xdb},
	{0x370a, 0x81},
	{0x3621, 0x87},
	{0x3801, 0x50},
	{0x3803, 0x08},
	{0x3827, 0x08},
	{0x3810, 0x40},
	{0x3a1a, 0x05},
	{0x3a0d, 0x08},
	{0x3a0e, 0x06},
	{0x5193, 0x70},
	{0x589b, 0x04},
	{0x589a, 0xc5},
	{0x401c, 0x04},
	{0x3804, 0x05},/*width:0x0510=1296*/
	{0x3805, 0x10},
	{0x5682, 0x05},/*avg x end*/
	{0x5683, 0x10},
	{0x3806, 0x03},/*height:0x03cc=972*/
	{0x3807, 0xcc},
	{0x5686, 0x03},/*avg y end*/
	{0x5687, 0xcc},
	{0x3808, 0x05},/*dvp width*/
	{0x3809, 0x10},
	{0x380a, 0x03},/*dvp height*/
	{0x380b, 0xcc},
	{0x5025, 0x80},
	{0x3824, 0x13},
	{0x3825, 0x50},
	{0x370d, 0x4b},
	{0x3613, 0x80},
	{0x460c, 0x20},
	{0x350c, 0x03},/*aec pk vts=vts*/
	{0x350d, 0xe8},

	{0x380e, 0x03}, /*vts:1000*/
	{0x380f, 0xe8},
	/*{0x503d, 0x80},*/

	/* add for test 30fps */
	/*
	   {0x300f,0x06},
	   {0x3010,0x00},
	   {0x3011,0x08},
	   {0x3012,0x00},
	   {0x380c,0x0c},
	   {0x380d,0x80},
	   {0x3815,0x44},
	   {0x460c,0x22},
	   {0x3615,0x00},
	   {0x3a08,0x12},
	   {0x3a09,0xC0},
	   {0x3a0e,0x03},
	   {0x3a0a,0x0F},
	   {0x3a0b,0xA0},
	   {0x3a0d,0x04},
	 */
};

/*2592 1944 full size*/
const struct _sensor_reg_t ov5642_framesize_full[] = {
	{0x3002, 0x5c},/*reset02: reset ififo,jfifo,sfifo,compression*/
	{0x3003, 0x00},/*reset03*/
	{0x3004, 0xff},/*clock enable00:all*/
	{0x3005, 0xff},/*clock enable01:all*/
	{0x3006, 0x43},/*clock enable02:enable format clock,format mux clock,average clock*/
	{0x3007, 0x37},/*clock enable03:mipi pclk, dvp, vfifo pclk, sclk*/
	{0x3815, 0x01},/*dvp pclk divider*/
	{0x370c, 0xa0},
	{0x3602, 0xe4},
	{0x3612, 0xac},
	{0x3634, 0xc0},
	{0x3605, 0x04},
	{0x3604, 0x48},
	{0x380c, 0x0c},/*hts:0x0c80=3200*/
	{0x380d, 0x80},
	{0x380e, 0x07},/*vts:0x07d0=2000*/
	{0x380f, 0xd0},
	{0x3818, 0xc0},
	{0x3705, 0xda},
	{0x370a, 0x80},
	{0x3621, 0x09},
	{0x3801, 0x8a},
	{0x3803, 0x0a},
	{0x3827, 0x0c},
	{0x3810, 0xc2},
	{0x3a1a, 0x04},
	{0x3a0d, 0x10},
	{0x3a0e, 0x0d},
	{0x5193, 0x70},
	{0x589b, 0x00},
	{0x589a, 0xc0},
	{0x401c, 0x06},
	{0x3804, 0x0a},/*width:0x0a20=2592*/
	{0x3805, 0x20},
	{0x5682, 0x0a},/*avg x end*/
	{0x5683, 0x20},
	{0x3806, 0x07},/*height:0x0798=1944*/
	{0x3807, 0x98},
	{0x5686, 0x07},/*avg y end*/
	{0x5687, 0x98},
	{0x3808, 0x0a},/*dvp width*/
	{0x3809, 0x20},
	{0x380a, 0x07},/*dvp height*/
	{0x380b, 0x98},
	{0x5025, 0x80},
	{0x3824, 0x11},
	{0x3825, 0xac},
	{0x370d, 0x0b},
	{0x3613, 0x44},
	{0x460c, 0x20},
	{0x350c, 0x07},/*aec pk vts=vts*/
	{0x350d, 0xd0},
};

const struct _sensor_reg_t ov5642_mipi_regs[] = {
	{0x3103, 0x93},
	{0x3008, 0x82},
	{0x3017, 0x7f},
	{0x3018, 0xfc},
	{0x3810, 0xc2},
	{0x3615, 0xf0},
	{0x3000, 0x00},
	{0x3001, 0x00},
	{0x3002, 0x00},
	{0x3003, 0x00},
	{0x3011, 0x08},
	{0x3010, 0x30},
	{0x3604, 0x60},
	{0x3622, 0x60},
	{0x3621, 0x09},
	{0x3709, 0x00},
	{0x4000, 0x21},
	{0x401d, 0x22},
	{0x3600, 0x54},
	{0x3605, 0x04},
	{0x3606, 0x3f},
	{0x3c01, 0x80},
	{0x300d, 0x21},
	{0x3623, 0x22},
	{0x5000, 0xcf},
	{0x5020, 0x04},
	{0x5181, 0x79},
	{0x5182, 0x00},
	{0x5185, 0x22},
	{0x5197, 0x01},
	{0x5500, 0x0a},
	{0x5504, 0x00},
	{0x5505, 0x7f},
	{0x5080, 0x08},
	{0x300e, 0x18},
	{0x4610, 0x00},
	{0x471d, 0x05},
	{0x4708, 0x06},
	{0x370c, 0xa0},
	{0x3808, 0x02},
	{0x3809, 0x80},
	{0x380a, 0x01},
	{0x380b, 0xe0},
	{0x380c, 0x0c},
	{0x380d, 0x80},
	{0x380e, 0x07},
	{0x380f, 0xd0},
	{0x5000, 0x06},
	{0x501f, 0x03},
	{0x3503, 0x07},
	{0x3501, 0x73},
	{0x3502, 0x80},
	{0x350b, 0x00},
	{0x3818, 0xc0},
	{0x3824, 0x11},
	{0x3801, 0x8a},
	{0x3a00, 0x78},
	{0x3a1a, 0x04},
	{0x3a13, 0x30},
	{0x3a18, 0x00},
	{0x3a19, 0x7c},
	{0x3a08, 0x12},
	{0x3a09, 0xc0},
	{0x3a0a, 0x0f},
	{0x3a0b, 0xa0},
	{0x3004, 0xff},
	{0x350c, 0x07},
	{0x350d, 0xd0},
	{0x3a0d, 0x08},
	{0x3a0e, 0x06},
	{0x3500, 0x00},
	{0x3501, 0x0f},
	{0x3502, 0xa0},
	{0x350a, 0x00},
	{0x350b, 0x00},
	{0x3030, 0x2b},
	{0x3a02, 0x00},
	{0x3a03, 0x7d},
	{0x3a04, 0x00},
	{0x3a14, 0x00},
	{0x3a15, 0x7d},
	{0x3a16, 0x00},
	{0x3a00, 0x78},
	{0x3a08, 0x09},
	{0x3a09, 0x60},
	{0x3a0a, 0x07},
	{0x3a0b, 0xd0},
	{0x3a0d, 0x10},
	{0x3a0e, 0x0d},
	{0x589b, 0x00},
	{0x589a, 0xc0},
	{0x401e, 0x20},
	{0x4001, 0x42},
	{0x401c, 0x06},
	{0x3825, 0xac},
	{0x3827, 0x0c},
	{0x5025, 0x80},
	{0x3a0f, 0x38},
	{0x3a10, 0x30},
	{0x3a1b, 0x3a},
	{0x3a1e, 0x2e},
	{0x3a11, 0x60},
	{0x3a1f, 0x10},
	{0x3710, 0x10},
	{0x3632, 0x51},
	{0x3702, 0x10},
	{0x3703, 0xb2},
	{0x3704, 0x18},
	{0x370b, 0x40},
	{0x370d, 0x03},
	{0x3631, 0x01},
	{0x3632, 0x52},
	{0x3606, 0x24},
	{0x3620, 0x96},
	{0x5785, 0x07},
	{0x3a13, 0x30},
	{0x3600, 0x52},
	{0x3604, 0x48},
	{0x3606, 0x1b},
	{0x370d, 0x0b},
	{0x370f, 0xc0},
	{0x3709, 0x01},
	{0x3823, 0x00},
	{0x5007, 0x00},
	{0x5009, 0x00},
	{0x5011, 0x00},
	{0x5013, 0x00},
	{0x519e, 0x00},
	{0x5086, 0x00},
	{0x5087, 0x00},
	{0x5088, 0x00},
	{0x5089, 0x00},
	{0x302b, 0x00},
	{0x5000, 0x06},
	{0x5001, 0x00},
	{0x5005, 0x00},
	{0x3818, 0x80},
	{0x3621, 0x29},
	{0x3801, 0xb4},

	{0x5001, 0xff},
	{0x5589, 0x30},
	{0x5580, 0x04},
	{0x558a, 0x0},

	/* colorbar */
	{0x503d, 0x80},
	{0x503e, 0x00},

	{0x3002, 0x5c},
	{0x3003, 0x00},
	{0x3004, 0xff},
	{0x3005, 0xff},
	{0x3006, 0x43},
	{0x3007, 0x37},
	{0x3815, 0x04},
	{0x370c, 0xa0},
	{0x3602, 0xfc},
	{0x3612, 0xff},
	{0x3634, 0xc0},
	{0x3605, 0x7c},
	{0x3604, 0x40},
	{0x3603, 0x27},
	{0x380c, 0x0c},
	{0x380d, 0x80},
	{0x380e, 0x03},
	{0x380f, 0xe8},
	{0x3818, 0xc1},
	{0x3705, 0xdb},
	{0x370a, 0x81},
	{0x3621, 0x87},
	{0x3801, 0x50},
	{0x3803, 0x08},
	{0x3827, 0x08},
	{0x3810, 0x40},
	{0x3a1a, 0x05},
	{0x3a0d, 0x08},
	{0x3a0e, 0x06},
	{0x5193, 0x70},
	{0x589b, 0x04},
	{0x589a, 0xc5},
	{0x401c, 0x04},

	{0x3804, 0x05},
	{0x3805, 0x10},
	{0x5682, 0x05},
	{0x5683, 0x10},
	{0x3806, 0x03},
	{0x3807, 0xcc},
	{0x5686, 0x03},
	{0x5687, 0xc8},
	{0x3808, 0x05},
	{0x3809, 0x10},
	{0x380a, 0x03},
	{0x380b, 0xcc},

	{0x5025, 0x80},
	{0x3824, 0x13},
	{0x3825, 0x50},
	{0x370d, 0x4b},
	{0x3613, 0x80},
	{0x460c, 0x20},
	{0x350c, 0x03},
	{0x350d, 0xe8},

	{0x302c, 0xc2},

	{0x4800, 0x04},
	{0x4801, 0x0f},
	{0x3007, 0x3b},
	{0x300e, 0x04},
	{0x4803, 0x50},
	{0x3815, 0x01},
	{0x4713, 0x02},
	{0x4842, 0x01},
	{0x300f, 0x0b},

	{0x4826, 0x00},
	{0x4827, 0x0a},
	{0x481a, 0x00},
	{0x481b, 0x0a},

	{0x3010, 0x70},
	{0x3033, 0x43},

	{0x3003, 0x03},
	{0x3003, 0x01},

};

#endif /* OV5642_H_INCLUDED */

/***************** END *******************/
