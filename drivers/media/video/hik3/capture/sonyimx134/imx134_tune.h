#ifndef _IMX134_TUNE_H
#define _IMX134_TUNE_H

#include "../isp/k3_isp_io.h"
#include <../isp/cam_util.h>
#ifdef IMX134_OTP
const struct isp_reg_t isp_init_regs_sonyimx134_Sunny[] = {
/* BLC */
	{0x1c58b, 0xff}, //avoid false contour Richard@0323
	{0x1c58c, 0xff}, //avoid false contour Richard@0323
#ifndef OVISP_DEBUG_MODE
/* AEC */
	{0x1c146, 0x30},//ori0x30 low AE target,should close
	{0x1c14a, 0x03},
	{0x1c14b, 0x0a},
	{0x1c14c, 0x0f},//aec fast step//
	{0x1c14e, 0x08},//slow step//08
	{0x1c140, 0x01},//banding
	{0x1c13e, 0x02},//real gain mode for OV8830

	{0x66401, 0x00},//window weight
	{0x66402, 0x20},//StatWin_Left
	{0x66403, 0x00},
	{0x66404, 0x20},//StatWin_Top
	{0x66405, 0x00},
	{0x66406, 0x20},//StatWin_Right
	{0x66407, 0x00},
	{0x66408, 0x20},//StatWin_Bottom
	{0x66409, 0x00},//definiton ofthe center 3x3 window
	{0x6640a, 0x80},//nWin_Left
	{0x6640d, 0x00},
	{0x6640e, 0x70},//nWin_Top
	{0x66411, 0x03},
	{0x66412, 0xc0},//nWin_Width
	{0x66415, 0x02},
	{0x66416, 0x00},//nWin_Height
	{0x6642e, 0x01},//nWin_Weight_0 weight pass
	{0x6642f, 0x01},//nWin_Weight_1
	{0x66430, 0x01},//nWin_Weight_2
	{0x66431, 0x01},//nWin_Weight_3
	{0x66432, 0x02},//nWin_Weight_4
	{0x66433, 0x02},//nWin_Weight_5
	{0x66434, 0x02},//nWin_Weight_6
	{0x66435, 0x02},//nWin_Weight_7
	{0x66436, 0x04},//nWin_Weight_8
	{0x66437, 0x02},//nWin_Weight_9
	{0x66438, 0x02},//nWin_Weight_10
	{0x66439, 0x02},//nWin_Weight_11
	{0x6643a, 0x02},//nWin_Weight_12
	{0x6644e, 0x03},//nWin_Weight_Shift
	{0x6644f, 0x04},//black level
	{0x66450, 0xf8},//saturate level
	{0x6645b, 0x1a},//black weight1
	{0x6645d, 0x1a},//black weight2
	{0x66460, 0x04},//saturate per1
	{0x66464, 0x0a},//saturate per2
	{0x66467, 0x14},//saturate weight1
	{0x66469, 0x14},//saturate weight2
	//auto AE control

/* Raw Stretch */
	{0x65020, 0x00},//RAW Stretch Target0x01-->00
	{0x66500, 0x28},
	{0x66501, 0x00},
	{0x66502, 0x8f},//0xff
	{0x66503, 0x0b},//0x0f
	{0x1c1b0, 0xff},
	{0x1c1b1, 0xff},
	{0x1c1b2, 0x01},
	{0x65905, 0x08},
	{0x66301, 0x02},//high level step
	{0x66302, 0xe0},//ref bin
	{0x66303, 0x06},//PsPer0 0a
	{0x66304, 0x10},//PsPer1
	{0x1c5a4, 0x01},//use new high stretch
	{0x1c5a5, 0x20},//stretch low step
	{0x1c5a6, 0x20},//stretch high step
	{0x1c5a7, 0x08},//stretch slow range
	{0x1c5a8, 0x02},//stretch slow step
	{0x1c1b8, 0x10},//ratio scale

	{0x1c5a2, 0x04},//target stable range
	{0x1c5a3, 0x06},//stretch target slow range

/* De-noise */
	{0x65604, 0x00},//Richard for new curve 0314
	{0x65605, 0x00},//Richard for new curve 0314
	{0x65606, 0x00},//Richard for new curve 0314
	{0x65607, 0x00},//Richard for new curve 0314

	{0x65510, 0x04}, //G dns slope change from 0x4 to 0xf Richard 0320
	{0x6551a, 0x02},//Raw G Dns improve white pixel 20120728
	{0x6551b, 0x02},//gain  2X 
	{0x6551c, 0x06},//gain  4X 
	{0x6551d, 0x08},//gain  8X 
	{0x6551e, 0x10},//gain 16X 
	{0x6551f, 0x20},//gain 32X 
	{0x65520, 0x30},//gain 64X 
	{0x65522, 0x00},//RAW BR De-noise
	{0x65523, 0x04},//gain 1X
	{0x65524, 0x00},
	{0x65525, 0x04},//gain 2X
	{0x65526, 0x00},
	{0x65527, 0x0c},//gain 4X
	{0x65528, 0x00},
	{0x65529, 0x10},//gain 8X
	{0x6552a, 0x00},
	{0x6552b, 0x20},//gain 16X
	{0x6552c, 0x00},
	{0x6552d, 0x40},//gain 32X
	{0x6552e, 0x00},
	{0x6552f, 0x50},//gain 64X
		
	{0x65c00, 0x03},//UV De-noise: gain 1X
	{0x65c01, 0x05},//gain 2X
	{0x65c02, 0x08},//gain 4X
	{0x65c03, 0x1f},//gain 8X
	{0x65c04, 0x1f},//gain 16X
	{0x65c05, 0x1f},//gain 32X

/* sharpeness */
	{0x65600, 0x00},
	{0x65601, 0x30},//0319
	{0x65602, 0x00},
	{0x65603, 0x60}, //y00215412 change sharpness high gain threshod 0x40->0x60 20120814
	{0x65608, 0x06},
	{0x65609, 0x20},
	{0x6560c, 0x00},
	{0x6560d, 0x08}, //low gain sharpness, 20120814 0x20->0x30
	{0x6560e, 0x10},//MinSharpenTp
	{0x6560f, 0x60},//MaxSharpenTp
	{0x65610, 0x10},//MinSharpenTm
	{0x65611, 0x60},//MaxSharpenTm
	{0x65613, 0x10},//SharpenAlpha
	{0x65615, 0x08},//HFreq_thre
	{0x65617, 0x06},//HFreq_coef

/* auto uv saturation */
	{0x1c4e8, 0x00},//Enable
	{0x1c4e9, 0xbf},// gain threshold1 40-->0b
	{0x1c4ea, 0xf7},//gain threshold2 78-->0d
	{0x1c4eb, 0x90}, //UV max saturation
	{0x1c4ec, 0x80}, //UV min saturation

/* Global Gamma */
	{0x1c49b, 0x01},
	{0x1c49c, 0x02},
	{0x1c49d, 0x01}, //gamma 2.0 0310
	{0x1c49e, 0x02},
	{0x1c49f, 0x01}, //gamma 2.0 0310
	{0x1c4a0, 0x00},
	{0x1c4a1, 0x18},
	{0x1c4a2, 0x00},
	{0x1c4a3, 0x88}, //gamma 2.0 0310 //avoid false contour Richard@0323


/* Tone Mapping */
	//contrast curve change for skin over exposure 20120728
    {0x1C4C0, 0x21},
	{0x1C4C1, 0x30},
	{0x1C4C2, 0x3c},
	{0x1C4C3, 0x47},
	{0x1C4C4, 0x50},
	{0x1C4C5, 0x58},
	{0x1C4C6, 0x61},
	{0x1C4C7, 0x6a},
	{0x1C4C8, 0x73},
	{0x1C4C9, 0x7e},
	{0x1C4CA, 0x8a},
	{0x1C4CB, 0x97},
	{0x1C4CC, 0xa6},
	{0x1C4CD, 0xbc},
	{0x1C4CE, 0xd8},
	{0x1c4d4, 0x20},//EDR scale
	{0x1c4d5, 0x20},//EDR scale
	{0x1c4cf, 0x80},
	{0x65a00, 0x1b},
	{0x65a01, 0xc0}, //huiyan 0801

	//dark boost
	{0x1c4b0, 0x02},
	{0x1c4b1, 0x80},

	//YUV curve gain control,expoure frist
	{0x1c1b3, 0x40}, //Gain thre1
	{0x1c1b4, 0x70}, //Gain thre2
	{0x1c1b5, 0x01}, //EDR gain control
	{0x1c1b6, 0x01}, //Curve Gain control
	{0x1c1b7, 0x40}, //after gamma cut ratio

	//Manual UV curve
  {0x1C998, 0x01},
  {0x1C999, 0x18},
  {0x1C99A, 0x01},
  {0x1C99B, 0x28},
  {0x1C99C, 0x01},
  {0x1C99D, 0x30},
  {0x1C99E, 0x01},
  {0x1C99F, 0x34},
  {0x1C9A0, 0x01},
  {0x1C9A1, 0x34},
  {0x1C9A2, 0x01},
  {0x1C9A3, 0x34},
  {0x1C9A4, 0x01},
  {0x1C9A5, 0x34},
  {0x1C9A6, 0x01},
  {0x1C9A7, 0x34},
  {0x1C9A8, 0x01},
  {0x1C9A9, 0x34},
  {0x1C9AA, 0x01},
  {0x1C9AB, 0x34},
  {0x1C9AC, 0x01},
  {0x1C9AD, 0x34},
  {0x1C9AE, 0x01},
  {0x1C9AF, 0x30},
  {0x1C9B0, 0x01},
  {0x1C9B1, 0x26},
  {0x1C9B2, 0x01},
  {0x1C9B3, 0x10},
  {0x1C9B4, 0x00},
  {0x1C9B5, 0xe6},
  {0x1C9B6, 0x00},
  {0x1C9B7, 0xaa},

/* LENC */
	{0x1c247, 0x00},//three profile,color temperature based lens shading correction mode 1: enable 0: disable
	{0x1c24c, 0x00},
	{0x1c24d, 0x40},
	{0x1c24e, 0x00},
	{0x1c24f, 0x80},
	{0x1c248, 0x40},
	{0x1c24a, 0x20},
	{0x1c574, 0x00},
	{0x1c575, 0x20},
	{0x1c576, 0x00},
	{0x1c577, 0xf0},
	{0x1c578, 0x40},

	{0x65200, 0x0d},
	{0x65206, 0x3c},
	{0x65207, 0x04},
	{0x65208, 0x3c},
	{0x65209, 0x04},
	{0x6520a, 0x33},
	{0x6520b, 0x0c},
	{0x65214, 0x28},
	{0x65216, 0x20},
	{0x1d93d, 0x08},
	{0x1d93e, 0x00},
	{0x1d93f, 0x40},

	{0x1d940, 0xfc},
	{0x1d942, 0x04},
	{0x1d941, 0xfc},
	{0x1d943, 0x04},

	{0x1d944, 0x00},
	{0x1d946, 0x00},
	{0x1d945, 0xfc},
	{0x1d947, 0x04},

/* OVISP LENC setting for D65 Long Exposure (HDR/3D) */
	{0x1c264, 0x10}, //Y1
	{0x1c265, 0xa }, 
	{0x1c266, 0x7 }, 
	{0x1c267, 0x7 }, 
	{0x1c268, 0x9 }, 
	{0x1c269, 0x11}, 
	{0x1c26a, 0x6 }, //Y2
	{0x1c26b, 0x3 }, 
	{0x1c26c, 0x2 }, 
	{0x1c26d, 0x2 }, 
	{0x1c26e, 0x3 }, 
	{0x1c26f, 0x6 }, 
	{0x1c270, 0x3 }, //Y3
	{0x1c271, 0x1 }, 
	{0x1c272, 0x0 }, 
	{0x1c273, 0x0 }, 
	{0x1c274, 0x1 }, 
	{0x1c275, 0x3 }, 
	{0x1c276, 0x3 }, //Y4
	{0x1c277, 0x1 }, 
	{0x1c278, 0x0 }, 
	{0x1c279, 0x0 }, 
	{0x1c27a, 0x1 }, 
	{0x1c27b, 0x3 }, 
	{0x1c27c, 0x7 }, //Y5
	{0x1c27d, 0x4 }, 
	{0x1c27e, 0x2 }, 
	{0x1c27f, 0x2 }, 
	{0x1c280, 0x3 }, 
	{0x1c281, 0x7 }, 
	{0x1c282, 0x13}, //Y6
	{0x1c283, 0xa }, 
	{0x1c284, 0x8 }, 
	{0x1c285, 0x8 }, 
	{0x1c286, 0xb }, 
	{0x1c287, 0x14}, 
	{0x1c288, 0x1d}, //Cb1
	{0x1c289, 0x1e}, 
	{0x1c28a, 0x1e}, 
	{0x1c28b, 0x1f}, 
	{0x1c28c, 0x1f}, 
	{0x1c28d, 0x1f}, //Cb2
	{0x1c28e, 0x1f}, 
	{0x1c28f, 0x1f}, 
	{0x1c290, 0x1f}, 
	{0x1c291, 0x20}, 
	{0x1c292, 0x1f}, //Cb3
	{0x1c293, 0x20}, 
	{0x1c294, 0x21}, 
	{0x1c295, 0x20}, 
	{0x1c296, 0x1f}, 
	{0x1c297, 0x20}, //Cb4
	{0x1c298, 0x1f}, 
	{0x1c299, 0x1f}, 
	{0x1c29a, 0x1f}, 
	{0x1c29b, 0x1f}, 
	{0x1c29c, 0x1f}, //Cb5
	{0x1c29d, 0x1e}, 
	{0x1c29e, 0x1e}, 
	{0x1c29f, 0x1e}, 
	{0x1c2a0, 0x1e},
	{0x1c2a1, 0x1f}, //Cr1
	{0x1c2a2, 0x20},      
	{0x1c2a3, 0x20},      
	{0x1c2a4, 0x20},      
	{0x1c2a5, 0x1f},      
	{0x1c2a6, 0x20}, //Cr2
	{0x1c2a7, 0x20},      
	{0x1c2a8, 0x20},      
	{0x1c2a9, 0x20},      
	{0x1c2aa, 0x20},      
	{0x1c2ab, 0x21}, //Cr3
	{0x1c2ac, 0x21},      
	{0x1c2ad, 0x20},      
	{0x1c2ae, 0x21},      
	{0x1c2af, 0x20},      
	{0x1c2b0, 0x20}, //Cr4
	{0x1c2b1, 0x21},      
	{0x1c2b2, 0x21},      
	{0x1c2b3, 0x21},      
	{0x1c2b4, 0x20},      
	{0x1c2b5, 0x21}, //cr5
	{0x1c2b6, 0x20},      
	{0x1c2b7, 0x20},      
	{0x1c2b8, 0x20},      
	{0x1c2b9, 0x1f},   
	
/* AWB */
	{0x66201, 0x52},
	{0x66203, 0x14},//crop window
	{0x66211, 0xe8},//awb top limit
	{0x66212, 0x04},//awb bottom limit

	{0x1c17c, 0x01},//CT mode
	{0x1c182, 0x04},
	{0x1c183, 0x00},//MinNum
	{0x1c184, 0x04},//AWB Step
	{0x1c58d, 0x00},//LimitAWBAtD65Enable

	{0x1c1be, 0x00},//AWB offset
	{0x1c1bf, 0x00},
	{0x1c1c0, 0x00},
	{0x1c1c1, 0x00},

	{0x1c1aa, 0x00},//avgAllEnable
	{0x1c1ad, 0x02},//weight of A
	{0x1c1ae, 0x06}, //weight of D65
	{0x1c1af, 0x04},//weight of CWF

	{0x1c5ac, 0x80},//pre-gain
	{0x1c5ad, 0x80},
	{0x1c5ae, 0x80},

	{0x1ccce, 0x02},//awb shift,open=02	
	{0x1cccf, 0x00},//B gain for A
	{0x1ccd0, 0x00},//R gain for A
	{0x1c5b8, 0x0c},//B gain for C outdoor Richard@0517
	{0x1c5b9, 0x18},//R gain for C outdoor Richard@0517
	{0x1ccd1, 0x0c},//B gain for C indoor Richard@0517
	{0x1ccd2, 0x18},//R gain for C indoor Richard@0517
	{0x1ccd3, 0x08},//B gain for D indoor
	{0x1ccd4, 0x08},//R gain for D indoor
	{0x1cccc, 0x08},//B gain for D outdoor
	{0x1cccd, 0x08},//R gain for D outdoor
                                            
	// for detect indoor/outdoor awb shift on cwf light,epxo*gain>>8
	{0x1c5b4, 0x02},//C indoor/outdoor switch
	{0x1c5b5, 0xff},//C indoor/outdoor switch
	{0x1c5b6, 0x04},//C indoor/outdoor switch
	{0x1c5b7, 0xff},//C indoor/outdoor switch

	//add awb  shift detect parameter according 0x1c734~0x1c736 
	{0x1ccd5, 0x3a}, //CT_A, 2012.06.02 yuanyabin
	{0x1ccd6, 0x66}, //CT_C
	{0x1ccd7, 0xac}, //CT_D

	{0x1c5cd, 0x00},//ori0x01 high light awb shift, modified by Jiangtao to avoid blurish when high CT 0310
	{0x1c5ce, 0x00},
	{0x1c5cf, 0xf0},
	{0x1c5d0, 0x01},
	{0x1c5d1, 0x20},
	{0x1c5d2, 0x03},
	{0x1c5d3, 0x00},
	{0x1c5d4, 0x40},//
	{0x1c5d5, 0xa0},//
	{0x1c5d6, 0xb0},//
	{0x1c5d7, 0xe8},//
	{0x1c5d8, 0x40},//
	{0x1c1c2, 0x00},
	{0x1c1c3, 0x20},

	{0x66206, 0x12}, //center(cwf) window threshold D0
	{0x66207, 0x1b}, //A threshold, range DX  0x15
	{0x66208, 0x15}, //day threshold, range DY 0xd
	{0x66209, 0x82}, //CWF X
	{0x6620a, 0x67}, //CWF Y
	{0x6620b, 0xe3}, //K_A_X2Y, a slop
	{0x6620c, 0xa5}, //K_D65_Y2X, d slop
	{0x6620d, 0x52}, //D65 Limit
	{0x6620e, 0x3b}, //A Limit
	{0x6620f, 0x73}, //D65 split
	{0x66210, 0x59}, //A split
	{0x66201, 0x52},
	
	//add ccm detect parameter according 0x1c734~0x1c736 
	{0x1c1c8 ,0x01}, //center CT, CWF
	{0x1c1c9 ,0x3f},
	{0x1c1cc, 0x00},//daylight
	{0x1c1cd, 0xbd},
	{0x1c1d0, 0x02},//a
	{0x1c1d1, 0x2a},
	
	{0x1c254, 0x0 },
	{0x1c255, 0xce},
	{0x1c256, 0x0 },
	{0x1c257, 0xe7},
	{0x1c258, 0x1 },
	{0x1c259, 0x69},
	{0x1c25a, 0x1 },
	{0x1c25b, 0xd2},


/* Color matrix */
	{0x1C1d8, 0x02},//center matrix, 
	{0x1C1d9, 0x4B},
	{0x1C1da, 0xFE},
	{0x1C1db, 0xB1},
	{0x1C1dc, 0x00},
	{0x1C1dd, 0x04},
	{0x1C1de, 0xFF},
	{0x1C1df, 0xE5},
	{0x1C1e0, 0x01},
	{0x1C1e1, 0x8D},
	{0x1C1e2, 0xFF},
	{0x1C1e3, 0x8E},
	{0x1C1e4, 0x00},
	{0x1C1e5, 0x38},
	{0x1C1e6, 0xFE},
	{0x1C1e7, 0xA8},
	{0x1C1e8, 0x02},
	{0x1C1e9, 0x20},		
	
	{0x1C1FC, 0xFF},//cmx left delta,daylight
	{0x1C1FD, 0xBF},
	{0x1C1FE, 0x00},
	{0x1C1FF, 0x33},
	{0x1C200, 0x00},
	{0x1C201, 0x0E},
	{0x1C202, 0xFF},
	{0x1C203, 0xB5},
	{0x1C204, 0x00},
	{0x1C205, 0x0C},
	{0x1C206, 0x00},
	{0x1C207, 0x3F},
	{0x1C208, 0xFF},
	{0x1C209, 0xDE},
	{0x1C20A, 0x00},
	{0x1C20B, 0x60},
	{0x1C20C, 0xFF},
	{0x1C20D, 0xC2},
	
	{0x1C220, 0x00},//cmx right delta,a light
	{0x1C221, 0xBE},
	{0x1C222, 0xFF},
	{0x1C223, 0x6E},
	{0x1C224, 0xFF},
	{0x1C225, 0xD4},
	{0x1C226, 0xFF},
	{0x1C227, 0xD8},
	{0x1C228, 0x00},
	{0x1C229, 0x3C},
	{0x1C22A, 0xFF},
	{0x1C22B, 0xEC},
	{0x1C22C, 0xFF},
	{0x1C22D, 0xAA},
	{0x1C22E, 0x01},
	{0x1C22F, 0x0F},
	{0x1C230, 0xFF},
	{0x1C231, 0x47},
	
	/* dpc */
	{0x65409, 0x08},
	{0x6540a, 0x08},
	{0x6540b, 0x08},
	{0x6540c, 0x08},
	{0x6540d, 0x0c},
	{0x6540e, 0x08},
	{0x6540f, 0x08},
	{0x65410, 0x08},
	{0x65408, 0x0b},

	//dynamic high gain Y curve for dark color change 20120728
	{0x1d963, 0x1a},
	{0x1d964, 0x28},
	{0x1d965, 0x33},
	{0x1d966, 0x3f},
	{0x1d967, 0x4c},
	{0x1d968, 0x59},
	{0x1d969, 0x66},
	{0x1d96a, 0x72},
	{0x1d96b, 0x7e},
	{0x1d96c, 0x8a},
	{0x1d96d, 0x96},
	{0x1d96e, 0xa4},
	{0x1d96f, 0xb5},
	{0x1d970, 0xC9},
	{0x1d971, 0xe2},
	{0x1d8fe, 0x01}, //UV cut gain control
	{0x1d8ff, 0x50}, //low gain thres
	{0x1d900, 0x70}, //high gain thres
	{0x1d97f, 0x14}, //UV cut low bright thres
	{0x1d973, 0x20}, //UV cut high bright thres
	{0x1d972, 0x00}, //adaptive gamma enable
	{0x1d974, 0x01}, //low gain gamma
	{0x1d975, 0xe6},
	{0x1d976, 0x01}, //high gain gamma
	{0x1d977, 0xc0},
	{0x1d978, 0x01}, //dark image gamma
	{0x1d979, 0xb3},
	{0x1d97a, 0x88}, //low gain slope
	{0x1d97b, 0x50}, //high gain slope
	{0x1d97c, 0x38}, //dark image slope
	{0x1d97d, 0x14}, //low bright thres
	{0x1d97e, 0x20}, //high bright thres

	{0x1d99e, 0x00}, //dynamic UV curve
	//low gain UV curve 1/2
	{0x1d904, 0x88},
	{0x1d905, 0x90},
	{0x1d906, 0x92},
	{0x1d907, 0x92},
	{0x1d908, 0x92},
	{0x1d909, 0x92},
	{0x1d90a, 0x92},
	{0x1d90b, 0x92},
	{0x1d90c, 0x92},
	{0x1d90d, 0x92},
	{0x1d90e, 0x92},
	{0x1d90f, 0x92},
	{0x1d910, 0x92},
	{0x1d911, 0x88},
	{0x1d912, 0x73},
	{0x1d913, 0x55},
	//high gain UV curve 1/2
	{0x1d914, 0x88},
	{0x1d915, 0x90},
	{0x1d916, 0x92},
	{0x1d917, 0x92},
	{0x1d918, 0x92},
	{0x1d919, 0x92},
	{0x1d91a, 0x92},
	{0x1d91b, 0x92},
	{0x1d91c, 0x92},
	{0x1d91d, 0x92},
	{0x1d91e, 0x92},
	{0x1d91f, 0x92},
	{0x1d920, 0x92},
	{0x1d921, 0x88},
	{0x1d922, 0x73},
	{0x1d923, 0x55},

	//dynamic CT AWB, huiyan 20120810 add for new firmware AWB
	{0x1d924, 0x00},//enable
	{0x1d950, 0x00},//Br thres,super highlight threshold
	{0x1d951, 0x08},//Br thres
	{0x1d952, 0x30},//Br Ratio,Ratio for transition region
	{0x1d8dc, 0x00},//Br thres0
	{0x1d8dd, 0x80},//Br thres0
	{0x1d8de, 0x44},//Br thres1
	{0x1d8df, 0x34},//Br thres1
	{0x1d8da, 0x10},//Br Ratio0
	{0x1d8db, 0x06},//Br Ratio1
	{0x1d949, 0x0f},//super highlight cwf thres //66206
	{0x1d925, 0x0f},//highlight cwf thres //66206
	{0x1d926, 0x0f},//middlelight cwf thres
	{0x1d927, 0x0f},//lowlight cwf thres
	{0x1d94a, 0x1c},//super highlight A thres //66207
	{0x1d928, 0x1c},//highlight A thres //66207
	{0x1d929, 0x1c},//middlelight A thres
	{0x1d92a, 0x22},//lowlight A thres
	{0x1d94b, 0x17},//super highlight D thres //66208
	{0x1d92b, 0x17},//highlight D thres //66208
	{0x1d92c, 0x17},//middlelight D thres
	{0x1d92d, 0x1f},//lowlight D thres
	{0x1d94c, 0x58},//super highlight D limit //6620d
	{0x1d92e, 0x58},//highlight D limit //6620d
	{0x1d92f, 0x54},//middlelight D limit
	{0x1d930, 0x4d},//lowlight D limit
	{0x1d94d, 0x42},//super highlight A limit //6620e
	{0x1d931, 0x42},//highlight A limit //6620e
	{0x1d932, 0x42},//middlelight A limit
	{0x1d933, 0x3e},//lowlight A limit
	{0x1d94e, 0x76},//super highlight D split //6620f
	{0x1d934, 0x76},//highlight D split //6620f
	{0x1d935, 0x76},//middlelight D split
	{0x1d936, 0x76},//lowlight D split
	{0x1d94f, 0x57},//super highlight A split //66210
	{0x1d937, 0x57},//highlight A split //66210
	{0x1d938, 0x57},//middlelight A split
	{0x1d939, 0x57},//lowlight A split
	{0x1d998, 0x1},
#endif
};

const struct isp_reg_t isp_init_regs_sonyimx134_Liteon[] = {
/* BLC */
	{0x1c58b, 0xff}, //avoid false contour Richard@0323
	{0x1c58c, 0xff}, //avoid false contour Richard@0323
#ifndef OVISP_DEBUG_MODE
/* AEC */
	{0x1c146, 0x30},//ori0x30 low AE target,should close
	{0x1c14a, 0x03},
	{0x1c14b, 0x0a},
	{0x1c14c, 0x0f},//aec fast step//
	{0x1c14e, 0x08},//slow step//08
	{0x1c140, 0x01},//banding
	{0x1c13e, 0x02},//real gain mode for OV8830

	{0x66401, 0x00},//window weight
	{0x66402, 0x20},//StatWin_Left
	{0x66403, 0x00},
	{0x66404, 0x20},//StatWin_Top
	{0x66405, 0x00},
	{0x66406, 0x20},//StatWin_Right
	{0x66407, 0x00},
	{0x66408, 0x20},//StatWin_Bottom
	{0x66409, 0x00},//definiton ofthe center 3x3 window
	{0x6640a, 0x80},//nWin_Left
	{0x6640d, 0x00},
	{0x6640e, 0x70},//nWin_Top
	{0x66411, 0x03},
	{0x66412, 0xc0},//nWin_Width
	{0x66415, 0x02},
	{0x66416, 0x00},//nWin_Height
	{0x6642e, 0x01},//nWin_Weight_0 weight pass
	{0x6642f, 0x01},//nWin_Weight_1
	{0x66430, 0x01},//nWin_Weight_2
	{0x66431, 0x01},//nWin_Weight_3
	{0x66432, 0x02},//nWin_Weight_4
	{0x66433, 0x02},//nWin_Weight_5
	{0x66434, 0x02},//nWin_Weight_6
	{0x66435, 0x02},//nWin_Weight_7
	{0x66436, 0x04},//nWin_Weight_8
	{0x66437, 0x02},//nWin_Weight_9
	{0x66438, 0x02},//nWin_Weight_10
	{0x66439, 0x02},//nWin_Weight_11
	{0x6643a, 0x02},//nWin_Weight_12
	{0x6644e, 0x03},//nWin_Weight_Shift
	{0x6644f, 0x04},//black level
	{0x66450, 0xf8},//saturate level
	{0x6645b, 0x1a},//black weight1
	{0x6645d, 0x1a},//black weight2
	{0x66460, 0x04},//saturate per1
	{0x66464, 0x0a},//saturate per2
	{0x66467, 0x14},//saturate weight1
	{0x66469, 0x14},//saturate weight2
	//auto AE control

/* Raw Stretch */
	{0x65020, 0x00},//RAW Stretch Target0x01-->00
	{0x66500, 0x28},
	{0x66501, 0x00},
	{0x66502, 0x8f},//0xff
	{0x66503, 0x0b},//0x0f
	{0x1c1b0, 0xff},
	{0x1c1b1, 0xff},
	{0x1c1b2, 0x01},
	{0x65905, 0x08},
	{0x66301, 0x02},//high level step
	{0x66302, 0xe0},//ref bin
	{0x66303, 0x06},//PsPer0 0a
	{0x66304, 0x10},//PsPer1
	{0x1c5a4, 0x01},//use new high stretch
	{0x1c5a5, 0x20},//stretch low step
	{0x1c5a6, 0x20},//stretch high step
	{0x1c5a7, 0x08},//stretch slow range
	{0x1c5a8, 0x02},//stretch slow step
	{0x1c1b8, 0x10},//ratio scale

	{0x1c5a2, 0x04},//target stable range
	{0x1c5a3, 0x06},//stretch target slow range

/* De-noise */
	{0x65604, 0x00},//Richard for new curve 0314
	{0x65605, 0x00},//Richard for new curve 0314
	{0x65606, 0x00},//Richard for new curve 0314
	{0x65607, 0x00},//Richard for new curve 0314

	{0x65510, 0x04}, //G dns slope change from 0x4 to 0xf Richard 0320
	{0x6551a, 0x02},//Raw G Dns improve white pixel 20120728
	{0x6551b, 0x02},//gain  2X 
	{0x6551c, 0x06},//gain  4X 
	{0x6551d, 0x08},//gain  8X 
	{0x6551e, 0x10},//gain 16X 
	{0x6551f, 0x20},//gain 32X 
	{0x65520, 0x30},//gain 64X 
	{0x65522, 0x00},//RAW BR De-noise
	{0x65523, 0x04},//gain 1X
	{0x65524, 0x00},
	{0x65525, 0x04},//gain 2X
	{0x65526, 0x00},
	{0x65527, 0x0c},//gain 4X
	{0x65528, 0x00},
	{0x65529, 0x10},//gain 8X
	{0x6552a, 0x00},
	{0x6552b, 0x20},//gain 16X
	{0x6552c, 0x00},
	{0x6552d, 0x40},//gain 32X
	{0x6552e, 0x00},
	{0x6552f, 0x50},//gain 64X
		
	{0x65c00, 0x03},//UV De-noise: gain 1X
	{0x65c01, 0x05},//gain 2X
	{0x65c02, 0x08},//gain 4X
	{0x65c03, 0x1f},//gain 8X
	{0x65c04, 0x1f},//gain 16X
	{0x65c05, 0x1f},//gain 32X

/* sharpeness */
	{0x65600, 0x00},
	{0x65601, 0x30},//0319
	{0x65602, 0x00},
	{0x65603, 0x60}, //y00215412 change sharpness high gain threshod 0x40->0x60 20120814
	{0x65608, 0x06},
	{0x65609, 0x20},
	{0x6560c, 0x00},
	{0x6560d, 0x08}, //low gain sharpness, 20120814 0x20->0x30
	{0x6560e, 0x10},//MinSharpenTp
	{0x6560f, 0x60},//MaxSharpenTp
	{0x65610, 0x10},//MinSharpenTm
	{0x65611, 0x60},//MaxSharpenTm
	{0x65613, 0x10},//SharpenAlpha
	{0x65615, 0x08},//HFreq_thre
	{0x65617, 0x06},//HFreq_coef

/* auto uv saturation */
	{0x1c4e8, 0x00},//Enable
	{0x1c4e9, 0xbf},// gain threshold1 40-->0b
	{0x1c4ea, 0xf7},//gain threshold2 78-->0d
	{0x1c4eb, 0x90}, //UV max saturation
	{0x1c4ec, 0x80}, //UV min saturation

/* Global Gamma */
	{0x1c49b, 0x01},
	{0x1c49c, 0x02},
	{0x1c49d, 0x01}, //gamma 2.0 0310
	{0x1c49e, 0x02},
	{0x1c49f, 0x01}, //gamma 2.0 0310
	{0x1c4a0, 0x00},
	{0x1c4a1, 0x18},
	{0x1c4a2, 0x00},
	{0x1c4a3, 0x88}, //gamma 2.0 0310 //avoid false contour Richard@0323


/* Tone Mapping */
	//contrast curve change for skin over exposure 20120728
    {0x1C4C0, 0x21},
	{0x1C4C1, 0x30},
	{0x1C4C2, 0x3c},
	{0x1C4C3, 0x47},
	{0x1C4C4, 0x50},
	{0x1C4C5, 0x58},
	{0x1C4C6, 0x61},
	{0x1C4C7, 0x6a},
	{0x1C4C8, 0x73},
	{0x1C4C9, 0x7e},
	{0x1C4CA, 0x8a},
	{0x1C4CB, 0x97},
	{0x1C4CC, 0xa6},
	{0x1C4CD, 0xbc},
	{0x1C4CE, 0xd8},
	{0x1c4d4, 0x20},//EDR scale
	{0x1c4d5, 0x20},//EDR scale
	{0x1c4cf, 0x80},
	{0x65a00, 0x1b},
	{0x65a01, 0xc0}, //huiyan 0801

	//dark boost
	{0x1c4b0, 0x02},
	{0x1c4b1, 0x80},

	//YUV curve gain control,expoure frist
	{0x1c1b3, 0x40}, //Gain thre1
	{0x1c1b4, 0x70}, //Gain thre2
	{0x1c1b5, 0x01}, //EDR gain control
	{0x1c1b6, 0x01}, //Curve Gain control
	{0x1c1b7, 0x40}, //after gamma cut ratio

	//Manual UV curve
  {0x1C998, 0x01},
  {0x1C999, 0x18},
  {0x1C99A, 0x01},
  {0x1C99B, 0x28},
  {0x1C99C, 0x01},
  {0x1C99D, 0x30},
  {0x1C99E, 0x01},
  {0x1C99F, 0x34},
  {0x1C9A0, 0x01},
  {0x1C9A1, 0x34},
  {0x1C9A2, 0x01},
  {0x1C9A3, 0x34},
  {0x1C9A4, 0x01},
  {0x1C9A5, 0x34},
  {0x1C9A6, 0x01},
  {0x1C9A7, 0x34},
  {0x1C9A8, 0x01},
  {0x1C9A9, 0x34},
  {0x1C9AA, 0x01},
  {0x1C9AB, 0x34},
  {0x1C9AC, 0x01},
  {0x1C9AD, 0x34},
  {0x1C9AE, 0x01},
  {0x1C9AF, 0x30},
  {0x1C9B0, 0x01},
  {0x1C9B1, 0x26},
  {0x1C9B2, 0x01},
  {0x1C9B3, 0x10},
  {0x1C9B4, 0x00},
  {0x1C9B5, 0xe6},
  {0x1C9B6, 0x00},
  {0x1C9B7, 0xaa},

/* LENC */
	{0x1c247, 0x00},//three profile,color temperature based lens shading correction mode 1: enable 0: disable
	{0x1c24c, 0x00},
	{0x1c24d, 0x40},
	{0x1c24e, 0x00},
	{0x1c24f, 0x80},
	{0x1c248, 0x40},
	{0x1c24a, 0x20},
	{0x1c574, 0x00},
	{0x1c575, 0x20},
	{0x1c576, 0x00},
	{0x1c577, 0xf0},
	{0x1c578, 0x40},

	{0x65200, 0x0d},
	{0x65206, 0x3c},
	{0x65207, 0x04},
	{0x65208, 0x3c},
	{0x65209, 0x04},
	{0x6520a, 0x33},
	{0x6520b, 0x0c},
	{0x65214, 0x28},
	{0x65216, 0x20},
	{0x1d93d, 0x08},
	{0x1d93e, 0x00},
	{0x1d93f, 0x40},

	{0x1d940, 0xfc},
	{0x1d942, 0x04},
	{0x1d941, 0xfc},
	{0x1d943, 0x04},

	{0x1d944, 0x00},
	{0x1d946, 0x00},
	{0x1d945, 0xfc},
	{0x1d947, 0x04},

/* OVISP LENC setting for D65 Long Exposure (HDR/3D) */
	{0x1c264, 0x10}, //Y1
	{0x1c265, 0xa }, 
	{0x1c266, 0x7 }, 
	{0x1c267, 0x7 }, 
	{0x1c268, 0x9 }, 
	{0x1c269, 0x11}, 
	{0x1c26a, 0x6 }, //Y2
	{0x1c26b, 0x3 }, 
	{0x1c26c, 0x2 }, 
	{0x1c26d, 0x2 }, 
	{0x1c26e, 0x3 }, 
	{0x1c26f, 0x6 }, 
	{0x1c270, 0x3 }, //Y3
	{0x1c271, 0x1 }, 
	{0x1c272, 0x0 }, 
	{0x1c273, 0x0 }, 
	{0x1c274, 0x1 }, 
	{0x1c275, 0x3 }, 
	{0x1c276, 0x3 }, //Y4
	{0x1c277, 0x1 }, 
	{0x1c278, 0x0 }, 
	{0x1c279, 0x0 }, 
	{0x1c27a, 0x1 }, 
	{0x1c27b, 0x3 }, 
	{0x1c27c, 0x7 }, //Y5
	{0x1c27d, 0x4 }, 
	{0x1c27e, 0x2 }, 
	{0x1c27f, 0x2 }, 
	{0x1c280, 0x3 }, 
	{0x1c281, 0x7 }, 
	{0x1c282, 0x13}, //Y6
	{0x1c283, 0xa }, 
	{0x1c284, 0x8 }, 
	{0x1c285, 0x8 }, 
	{0x1c286, 0xb }, 
	{0x1c287, 0x14}, 
	{0x1c288, 0x1d}, //Cb1
	{0x1c289, 0x1e}, 
	{0x1c28a, 0x1e}, 
	{0x1c28b, 0x1f}, 
	{0x1c28c, 0x1f}, 
	{0x1c28d, 0x1f}, //Cb2
	{0x1c28e, 0x1f}, 
	{0x1c28f, 0x1f}, 
	{0x1c290, 0x1f}, 
	{0x1c291, 0x20}, 
	{0x1c292, 0x1f}, //Cb3
	{0x1c293, 0x20}, 
	{0x1c294, 0x21}, 
	{0x1c295, 0x20}, 
	{0x1c296, 0x1f}, 
	{0x1c297, 0x20}, //Cb4
	{0x1c298, 0x1f}, 
	{0x1c299, 0x1f}, 
	{0x1c29a, 0x1f}, 
	{0x1c29b, 0x1f}, 
	{0x1c29c, 0x1f}, //Cb5
	{0x1c29d, 0x1e}, 
	{0x1c29e, 0x1e}, 
	{0x1c29f, 0x1e}, 
	{0x1c2a0, 0x1e},
	{0x1c2a1, 0x1f}, //Cr1
	{0x1c2a2, 0x20},      
	{0x1c2a3, 0x20},      
	{0x1c2a4, 0x20},      
	{0x1c2a5, 0x1f},      
	{0x1c2a6, 0x20}, //Cr2
	{0x1c2a7, 0x20},      
	{0x1c2a8, 0x20},      
	{0x1c2a9, 0x20},      
	{0x1c2aa, 0x20},      
	{0x1c2ab, 0x21}, //Cr3
	{0x1c2ac, 0x21},      
	{0x1c2ad, 0x20},      
	{0x1c2ae, 0x21},      
	{0x1c2af, 0x20},      
	{0x1c2b0, 0x20}, //Cr4
	{0x1c2b1, 0x21},      
	{0x1c2b2, 0x21},      
	{0x1c2b3, 0x21},      
	{0x1c2b4, 0x20},      
	{0x1c2b5, 0x21}, //cr5
	{0x1c2b6, 0x20},      
	{0x1c2b7, 0x20},      
	{0x1c2b8, 0x20},      
	{0x1c2b9, 0x1f},   
	
/* AWB */
	{0x66201, 0x52},
	{0x66203, 0x14},//crop window
	{0x66211, 0xe8},//awb top limit
	{0x66212, 0x04},//awb bottom limit

	{0x1c17c, 0x01},//CT mode
	{0x1c182, 0x04},
	{0x1c183, 0x00},//MinNum
	{0x1c184, 0x04},//AWB Step
	{0x1c58d, 0x00},//LimitAWBAtD65Enable

	{0x1c1be, 0x00},//AWB offset
	{0x1c1bf, 0x00},
	{0x1c1c0, 0x00},
	{0x1c1c1, 0x00},

	{0x1c1aa, 0x00},//avgAllEnable
	{0x1c1ad, 0x02},//weight of A
	{0x1c1ae, 0x06}, //weight of D65
	{0x1c1af, 0x04},//weight of CWF

	{0x1c5ac, 0x80},//pre-gain
	{0x1c5ad, 0x80},
	{0x1c5ae, 0x80},

	{0x1ccce, 0x02},//awb shift,open=02	
	{0x1cccf, 0x00},//B gain for A
	{0x1ccd0, 0x00},//R gain for A
	{0x1c5b8, 0x0c},//B gain for C outdoor Richard@0517
	{0x1c5b9, 0x18},//R gain for C outdoor Richard@0517
	{0x1ccd1, 0x0c},//B gain for C indoor Richard@0517
	{0x1ccd2, 0x18},//R gain for C indoor Richard@0517
	{0x1ccd3, 0x08},//B gain for D indoor
	{0x1ccd4, 0x08},//R gain for D indoor
	{0x1cccc, 0x08},//B gain for D outdoor
	{0x1cccd, 0x08},//R gain for D outdoor
                                            
	// for detect indoor/outdoor awb shift on cwf light,epxo*gain>>8
	{0x1c5b4, 0x02},//C indoor/outdoor switch
	{0x1c5b5, 0xff},//C indoor/outdoor switch
	{0x1c5b6, 0x04},//C indoor/outdoor switch
	{0x1c5b7, 0xff},//C indoor/outdoor switch

	//add awb  shift detect parameter according 0x1c734~0x1c736 
	{0x1ccd5, 0x3a}, //CT_A, 2012.06.02 yuanyabin
	{0x1ccd6, 0x66}, //CT_C
	{0x1ccd7, 0xac}, //CT_D

	{0x1c5cd, 0x00},//ori0x01 high light awb shift, modified by Jiangtao to avoid blurish when high CT 0310
	{0x1c5ce, 0x00},
	{0x1c5cf, 0xf0},
	{0x1c5d0, 0x01},
	{0x1c5d1, 0x20},
	{0x1c5d2, 0x03},
	{0x1c5d3, 0x00},
	{0x1c5d4, 0x40},//
	{0x1c5d5, 0xa0},//
	{0x1c5d6, 0xb0},//
	{0x1c5d7, 0xe8},//
	{0x1c5d8, 0x40},//
	{0x1c1c2, 0x00},
	{0x1c1c3, 0x20},

	{0x66206, 0x12}, //center(cwf) window threshold D0
	{0x66207, 0x1b}, //A threshold, range DX  0x15
	{0x66208, 0x15}, //day threshold, range DY 0xd
	{0x66209, 0x82}, //CWF X
	{0x6620a, 0x67}, //CWF Y
	{0x6620b, 0xe3}, //K_A_X2Y, a slop
	{0x6620c, 0xa5}, //K_D65_Y2X, d slop
	{0x6620d, 0x52}, //D65 Limit
	{0x6620e, 0x3b}, //A Limit
	{0x6620f, 0x73}, //D65 split
	{0x66210, 0x59}, //A split
	{0x66201, 0x52},
	
	//add ccm detect parameter according 0x1c734~0x1c736 
	{0x1c1c8 ,0x01}, //center CT, CWF
	{0x1c1c9 ,0x3f},
	{0x1c1cc, 0x00},//daylight
	{0x1c1cd, 0xbd},
	{0x1c1d0, 0x02},//a
	{0x1c1d1, 0x2a},
	
	{0x1c254, 0x0 },
	{0x1c255, 0xce},
	{0x1c256, 0x0 },
	{0x1c257, 0xe7},
	{0x1c258, 0x1 },
	{0x1c259, 0x69},
	{0x1c25a, 0x1 },
	{0x1c25b, 0xd2},


/* Color matrix */
	{0x1C1d8, 0x02},//center matrix, 
	{0x1C1d9, 0x4B},
	{0x1C1da, 0xFE},
	{0x1C1db, 0xB1},
	{0x1C1dc, 0x00},
	{0x1C1dd, 0x04},
	{0x1C1de, 0xFF},
	{0x1C1df, 0xE5},
	{0x1C1e0, 0x01},
	{0x1C1e1, 0x8D},
	{0x1C1e2, 0xFF},
	{0x1C1e3, 0x8E},
	{0x1C1e4, 0x00},
	{0x1C1e5, 0x38},
	{0x1C1e6, 0xFE},
	{0x1C1e7, 0xA8},
	{0x1C1e8, 0x02},
	{0x1C1e9, 0x20},		
	
	{0x1C1FC, 0xFF},//cmx left delta,daylight
	{0x1C1FD, 0xBF},
	{0x1C1FE, 0x00},
	{0x1C1FF, 0x33},
	{0x1C200, 0x00},
	{0x1C201, 0x0E},
	{0x1C202, 0xFF},
	{0x1C203, 0xB5},
	{0x1C204, 0x00},
	{0x1C205, 0x0C},
	{0x1C206, 0x00},
	{0x1C207, 0x3F},
	{0x1C208, 0xFF},
	{0x1C209, 0xDE},
	{0x1C20A, 0x00},
	{0x1C20B, 0x60},
	{0x1C20C, 0xFF},
	{0x1C20D, 0xC2},
	
	{0x1C220, 0x00},//cmx right delta,a light
	{0x1C221, 0xBE},
	{0x1C222, 0xFF},
	{0x1C223, 0x6E},
	{0x1C224, 0xFF},
	{0x1C225, 0xD4},
	{0x1C226, 0xFF},
	{0x1C227, 0xD8},
	{0x1C228, 0x00},
	{0x1C229, 0x3C},
	{0x1C22A, 0xFF},
	{0x1C22B, 0xEC},
	{0x1C22C, 0xFF},
	{0x1C22D, 0xAA},
	{0x1C22E, 0x01},
	{0x1C22F, 0x0F},
	{0x1C230, 0xFF},
	{0x1C231, 0x47},
	
	/* dpc */
	{0x65409, 0x08},
	{0x6540a, 0x08},
	{0x6540b, 0x08},
	{0x6540c, 0x08},
	{0x6540d, 0x0c},
	{0x6540e, 0x08},
	{0x6540f, 0x08},
	{0x65410, 0x08},
	{0x65408, 0x0b},

	//dynamic high gain Y curve for dark color change 20120728
	{0x1d963, 0x1a},
	{0x1d964, 0x28},
	{0x1d965, 0x33},
	{0x1d966, 0x3f},
	{0x1d967, 0x4c},
	{0x1d968, 0x59},
	{0x1d969, 0x66},
	{0x1d96a, 0x72},
	{0x1d96b, 0x7e},
	{0x1d96c, 0x8a},
	{0x1d96d, 0x96},
	{0x1d96e, 0xa4},
	{0x1d96f, 0xb5},
	{0x1d970, 0xC9},
	{0x1d971, 0xe2},
	{0x1d8fe, 0x01}, //UV cut gain control
	{0x1d8ff, 0x50}, //low gain thres
	{0x1d900, 0x70}, //high gain thres
	{0x1d97f, 0x14}, //UV cut low bright thres
	{0x1d973, 0x20}, //UV cut high bright thres
	{0x1d972, 0x00}, //adaptive gamma enable
	{0x1d974, 0x01}, //low gain gamma
	{0x1d975, 0xe6},
	{0x1d976, 0x01}, //high gain gamma
	{0x1d977, 0xc0},
	{0x1d978, 0x01}, //dark image gamma
	{0x1d979, 0xb3},
	{0x1d97a, 0x88}, //low gain slope
	{0x1d97b, 0x50}, //high gain slope
	{0x1d97c, 0x38}, //dark image slope
	{0x1d97d, 0x14}, //low bright thres
	{0x1d97e, 0x20}, //high bright thres

	{0x1d99e, 0x00}, //dynamic UV curve
	//low gain UV curve 1/2
	{0x1d904, 0x88},
	{0x1d905, 0x90},
	{0x1d906, 0x92},
	{0x1d907, 0x92},
	{0x1d908, 0x92},
	{0x1d909, 0x92},
	{0x1d90a, 0x92},
	{0x1d90b, 0x92},
	{0x1d90c, 0x92},
	{0x1d90d, 0x92},
	{0x1d90e, 0x92},
	{0x1d90f, 0x92},
	{0x1d910, 0x92},
	{0x1d911, 0x88},
	{0x1d912, 0x73},
	{0x1d913, 0x55},
	//high gain UV curve 1/2
	{0x1d914, 0x88},
	{0x1d915, 0x90},
	{0x1d916, 0x92},
	{0x1d917, 0x92},
	{0x1d918, 0x92},
	{0x1d919, 0x92},
	{0x1d91a, 0x92},
	{0x1d91b, 0x92},
	{0x1d91c, 0x92},
	{0x1d91d, 0x92},
	{0x1d91e, 0x92},
	{0x1d91f, 0x92},
	{0x1d920, 0x92},
	{0x1d921, 0x88},
	{0x1d922, 0x73},
	{0x1d923, 0x55},

	//dynamic CT AWB, huiyan 20120810 add for new firmware AWB
	{0x1d924, 0x00},//enable
	{0x1d950, 0x00},//Br thres,super highlight threshold
	{0x1d951, 0x08},//Br thres
	{0x1d952, 0x30},//Br Ratio,Ratio for transition region
	{0x1d8dc, 0x00},//Br thres0
	{0x1d8dd, 0x80},//Br thres0
	{0x1d8de, 0x44},//Br thres1
	{0x1d8df, 0x34},//Br thres1
	{0x1d8da, 0x10},//Br Ratio0
	{0x1d8db, 0x06},//Br Ratio1
	{0x1d949, 0x0f},//super highlight cwf thres //66206
	{0x1d925, 0x0f},//highlight cwf thres //66206
	{0x1d926, 0x0f},//middlelight cwf thres
	{0x1d927, 0x0f},//lowlight cwf thres
	{0x1d94a, 0x1c},//super highlight A thres //66207
	{0x1d928, 0x1c},//highlight A thres //66207
	{0x1d929, 0x1c},//middlelight A thres
	{0x1d92a, 0x22},//lowlight A thres
	{0x1d94b, 0x17},//super highlight D thres //66208
	{0x1d92b, 0x17},//highlight D thres //66208
	{0x1d92c, 0x17},//middlelight D thres
	{0x1d92d, 0x1f},//lowlight D thres
	{0x1d94c, 0x58},//super highlight D limit //6620d
	{0x1d92e, 0x58},//highlight D limit //6620d
	{0x1d92f, 0x54},//middlelight D limit
	{0x1d930, 0x4d},//lowlight D limit
	{0x1d94d, 0x42},//super highlight A limit //6620e
	{0x1d931, 0x42},//highlight A limit //6620e
	{0x1d932, 0x42},//middlelight A limit
	{0x1d933, 0x3e},//lowlight A limit
	{0x1d94e, 0x76},//super highlight D split //6620f
	{0x1d934, 0x76},//highlight D split //6620f
	{0x1d935, 0x76},//middlelight D split
	{0x1d936, 0x76},//lowlight D split
	{0x1d94f, 0x57},//super highlight A split //66210
	{0x1d937, 0x57},//highlight A split //66210
	{0x1d938, 0x57},//middlelight A split
	{0x1d939, 0x57},//lowlight A split
	{0x1d998, 0x1},
#endif
};


#else
const struct isp_reg_t isp_init_regs_sonyimx134_Sunny[] = {
/* BLC */
	{0x1c58b, 0xff}, //avoid false contour Richard@0323
	{0x1c58c, 0xff}, //avoid false contour Richard@0323
#ifndef OVISP_DEBUG_MODE
/* AEC */
	{0x1c146, 0x30},//ori0x30 low AE target,should close
	{0x1c14a, 0x03},
	{0x1c14b, 0x0a},
	{0x1c14c, 0x0f},//aec fast step//
	{0x1c14e, 0x08},//slow step//08
	{0x1c140, 0x01},//banding
	{0x1c13e, 0x02},//real gain mode for OV8830

	{0x66401, 0x00},//window weight
	{0x66402, 0x20},//StatWin_Left
	{0x66403, 0x00},
	{0x66404, 0x20},//StatWin_Top
	{0x66405, 0x00},
	{0x66406, 0x20},//StatWin_Right
	{0x66407, 0x00},
	{0x66408, 0x20},//StatWin_Bottom
	{0x66409, 0x00},//definiton ofthe center 3x3 window
	{0x6640a, 0x80},//nWin_Left
	{0x6640d, 0x00},
	{0x6640e, 0x70},//nWin_Top
	{0x66411, 0x03},
	{0x66412, 0xc0},//nWin_Width
	{0x66415, 0x02},
	{0x66416, 0x00},//nWin_Height
	{0x6642e, 0x01},//nWin_Weight_0 weight pass
	{0x6642f, 0x01},//nWin_Weight_1
	{0x66430, 0x01},//nWin_Weight_2
	{0x66431, 0x01},//nWin_Weight_3
	{0x66432, 0x02},//nWin_Weight_4
	{0x66433, 0x02},//nWin_Weight_5
	{0x66434, 0x02},//nWin_Weight_6
	{0x66435, 0x02},//nWin_Weight_7
	{0x66436, 0x04},//nWin_Weight_8
	{0x66437, 0x02},//nWin_Weight_9
	{0x66438, 0x02},//nWin_Weight_10
	{0x66439, 0x02},//nWin_Weight_11
	{0x6643a, 0x02},//nWin_Weight_12
	{0x6644e, 0x03},//nWin_Weight_Shift
	{0x6644f, 0x04},//black level
	{0x66450, 0xf8},//saturate level
	{0x6645b, 0x1a},//black weight1
	{0x6645d, 0x1a},//black weight2
	{0x66460, 0x04},//saturate per1
	{0x66464, 0x0a},//saturate per2
	{0x66467, 0x14},//saturate weight1
	{0x66469, 0x14},//saturate weight2
	//auto AE control

/* Raw Stretch */
	{0x65020, 0x00},//RAW Stretch Target0x01-->00
	{0x66500, 0x28},
	{0x66501, 0x00},
	{0x66502, 0x8f},//0xff
	{0x66503, 0x0b},//0x0f
	{0x1c1b0, 0xff},
	{0x1c1b1, 0xff},
	{0x1c1b2, 0x01},
	{0x65905, 0x08},
	{0x66301, 0x02},//high level step
	{0x66302, 0xe0},//ref bin
	{0x66303, 0x06},//PsPer0 0a
	{0x66304, 0x10},//PsPer1
	{0x1c5a4, 0x01},//use new high stretch
	{0x1c5a5, 0x20},//stretch low step
	{0x1c5a6, 0x20},//stretch high step
	{0x1c5a7, 0x08},//stretch slow range
	{0x1c5a8, 0x02},//stretch slow step
	{0x1c1b8, 0x10},//ratio scale

	{0x1c5a2, 0x04},//target stable range
	{0x1c5a3, 0x06},//stretch target slow range

/* De-noise */
	{0x65604, 0x00},//Richard for new curve 0314
	{0x65605, 0x00},//Richard for new curve 0314
	{0x65606, 0x00},//Richard for new curve 0314
	{0x65607, 0x00},//Richard for new curve 0314

	{0x65510, 0x0C},//G dns slope change from 0x4 to 0xf Richard 0320
	{0x6551a, 0x02},//Raw G Dns improve white pixel 20120728
	{0x6551b, 0x02},//gain  2X
	{0x6551c, 0x04},//gain  4X
	{0x6551d, 0x08},//gain  8X
	{0x6551e, 0x0c},//gain 16X
	{0x6551f, 0x16},//gain 32X
	{0x65520, 0x16},//gain 64X
	{0x65522, 0x00},//RAW BR De-noise
	{0x65523, 0x02},//gain 1X
	{0x65524, 0x00},
	{0x65525, 0x04},//gain 2X
	{0x65526, 0x00},
	{0x65527, 0x08},//gain 4X
	{0x65528, 0x00},
	{0x65529, 0x10},//gain 8X
	{0x6552a, 0x00},
	{0x6552b, 0x20},//gain 16X
	{0x6552c, 0x00},
	{0x6552d, 0x20},//gain 32X
	{0x6552e, 0x00},
	{0x6552f, 0x20},//gain 64X

	{0x65c00, 0x03},//UV De-noise: gain 1X
	{0x65c01, 0x05},//gain 2X
	{0x65c02, 0x08},//gain 4X
	{0x65c03, 0x1f},//gain 8X
	{0x65c04, 0x1f},//gain 16X
	{0x65c05, 0x1f},//gain 32X

/* sharpeness */
	{0x65600, 0x00},
	{0x65601, 0x30},//0319
	{0x65602, 0x00},
	{0x65603, 0x60}, //y00215412 change sharpness high gain threshod 0x40->0x60 20120814
	{0x65608, 0x06},
	{0x65609, 0x20},
	{0x6560c, 0x00},
	{0x6560d, 0x08}, //low gain sharpness, 20120814 0x20->0x30
	{0x6560e, 0x10},//MinSharpenTp
	{0x6560f, 0x60},//MaxSharpenTp
	{0x65610, 0x10},//MinSharpenTm
	{0x65611, 0x60},//MaxSharpenTm
	{0x65613, 0x10},//SharpenAlpha
	{0x65615, 0x08},//HFreq_thre
	{0x65617, 0x06},//HFreq_coef

/* auto uv saturation */
	{0x1c4e8, 0x00},//Enable
	{0x1c4e9, 0xbf},// gain threshold1 40-->0b
	{0x1c4ea, 0xf7},//gain threshold2 78-->0d
	{0x1c4eb, 0x90}, //UV max saturation
	{0x1c4ec, 0x80}, //UV min saturation

/* Global Gamma */
	{0x1c49b, 0x01},
	{0x1c49c, 0x02},
	{0x1c49d, 0x01}, //gamma 2.0 0310
	{0x1c49e, 0x02},
	{0x1c49f, 0x01}, //gamma 2.0 0310
	{0x1c4a0, 0x00},
	{0x1c4a1, 0x18},
	{0x1c4a2, 0x00},
	{0x1c4a3, 0x88}, //gamma 2.0 0310 //avoid false contour Richard@0323


/* Tone Mapping */
	//contrast curve change for skin over exposure 20120728
       {0x1C4C0, 0x1a},
	{0x1C4C1, 0x28},
	{0x1C4C2, 0x33},
	{0x1C4C3, 0x3f},
	{0x1C4C4, 0x4c},
	{0x1C4C5, 0x59},
	{0x1C4C6, 0x66},
	{0x1C4C7, 0x72},
	{0x1C4C8, 0x7e},
	{0x1C4C9, 0x8a},
	{0x1C4CA, 0x96},
	{0x1C4CB, 0xa4},
	{0x1C4CC, 0xb5},
	{0x1C4CD, 0xC9},
	{0x1C4CE, 0xe2},
	{0x1c4d4, 0x20},//EDR scale
	{0x1c4d5, 0x20},//EDR scale
	{0x1c4cf, 0x80},
	{0x65a00, 0x1b},
	{0x65a01, 0xc0}, //huiyan 0801

	//dark boost
	{0x1c4b0, 0x02},
	{0x1c4b1, 0x80},

	//YUV curve gain control,expoure frist
	{0x1c1b3, 0x40}, //Gain thre1
	{0x1c1b4, 0x70}, //Gain thre2
	{0x1c1b5, 0x01}, //EDR gain control
	{0x1c1b6, 0x01}, //Curve Gain control
	{0x1c1b7, 0x40}, //after gamma cut ratio

	//Manual UV curve
	{0x1C998, 0x01},
	{0x1C999, 0x10},
	{0x1C99A, 0x01},
	{0x1C99B, 0x23},
	{0x1C99C, 0x01},
	{0x1C99D, 0x28},
	{0x1C99E, 0x01},
	{0x1C99F, 0x28},
	{0x1C9A0, 0x01},
	{0x1C9A1, 0x28},
	{0x1C9A2, 0x01},
	{0x1C9A3, 0x28},
	{0x1C9A4, 0x01},
	{0x1C9A5, 0x28},
	{0x1C9A6, 0x01},
	{0x1C9A7, 0x28},
	{0x1C9A8, 0x01},
	{0x1C9A9, 0x28},
	{0x1C9AA, 0x01},
	{0x1C9AB, 0x28},
	{0x1C9AC, 0x01},
	{0x1C9AD, 0x28},
	{0x1C9AE, 0x01},
	{0x1C9AF, 0x28},
	{0x1C9B0, 0x01},
	{0x1C9B1, 0x28},
	{0x1C9B2, 0x01},
	{0x1C9B3, 0x20},
	{0x1C9B4, 0x00},
	{0x1C9B5, 0xe8},
	{0x1C9B6, 0x00},
	{0x1C9B7, 0xaa},

/* LENC */
	{0x1c247, 0x00},//three profile,color temperature based lens shading correction mode 1: enable 0: disable
	{0x1c24c, 0x00},
	{0x1c24d, 0x40},
	{0x1c24e, 0x00},
	{0x1c24f, 0x80},
	{0x1c248, 0x40},
	{0x1c24a, 0x20},
	{0x1c574, 0x00},
	{0x1c575, 0x20},
	{0x1c576, 0x00},
	{0x1c577, 0xf0},
	{0x1c578, 0x40},

	{0x65200, 0x0d},
	{0x65206, 0x3c},
	{0x65207, 0x04},
	{0x65208, 0x3c},
	{0x65209, 0x04},
	{0x6520a, 0x33},
	{0x6520b, 0x0c},
	{0x65214, 0x28},
	{0x65216, 0x20},
	{0x1d93d, 0x08},
	{0x1d93e, 0x00},
	{0x1d93f, 0x40},

	{0x1d940, 0xfc},
	{0x1d942, 0x04},
	{0x1d941, 0xfc},
	{0x1d943, 0x04},

	{0x1d944, 0x00},
	{0x1d946, 0x00},
	{0x1d945, 0xfc},
	{0x1d947, 0x04},

/* OVISP LENC setting for D65 Long Exposure (HDR/3D) */
	//Y channel re-back to old version(do not plus 8) 20120821 by y00215412
	{0x1c264, 0x2f}, //Y1
	{0x1c265, 0x1f},
	{0x1c266, 0x19},
	{0x1c267, 0x1a},
	{0x1c268, 0x1e},
	{0x1c269, 0x2d},
	{0x1c26a, 0x17},//Y2
	{0x1c26b, 0xc },
	{0x1c26c, 0x8 },
	{0x1c26d, 0x8 },
	{0x1c26e, 0xd },
	{0x1c26f, 0x15},
	{0x1c270, 0xd },//Y3
	{0x1c271, 0x5 },
	{0x1c272, 0x0 },
	{0x1c273, 0x0 },
	{0x1c274, 0x4 },
	{0x1c275, 0xe },
	{0x1c276, 0xe },//Y4
	{0x1c277, 0x4 },
	{0x1c278, 0x0 },
	{0x1c279, 0x0 },
	{0x1c27a, 0x4 },
	{0x1c27b, 0xe },
	{0x1c27c, 0x16},//Y5
	{0x1c27d, 0xc },
	{0x1c27e, 0x8 },
	{0x1c27f, 0x8 },
	{0x1c280, 0xc },
	{0x1c281, 0x16},
	{0x1c282, 0x33},//Y6
	{0x1c283, 0x1f},
	{0x1c284, 0x1a},
	{0x1c285, 0x1a},
	{0x1c286, 0x1f},
	{0x1c287, 0x31},
	{0x1c288, 0x1d},//Cb1
	{0x1c289, 0x1d},
	{0x1c28a, 0x1c},
	{0x1c28b, 0x1d},
	{0x1c28c, 0x1d},
	{0x1c28d, 0x1e},//Cb2
	{0x1c28e, 0x1d},
	{0x1c28f, 0x1e},
	{0x1c290, 0x1d},
	{0x1c291, 0x1d},
	{0x1c292, 0x1c},//Cb3
	{0x1c293, 0x20},
	{0x1c294, 0x21},
	{0x1c295, 0x1f},
	{0x1c296, 0x1c},
	{0x1c297, 0x1e},//Cb4
	{0x1c298, 0x1e},
	{0x1c299, 0x1e},
	{0x1c29a, 0x1e},
	{0x1c29b, 0x1d},
	{0x1c29c, 0x1d},//Cb5
	{0x1c29d, 0x1e},
	{0x1c29e, 0x1d},
	{0x1c29f, 0x1e},
	{0x1c2a0, 0x1d},
	{0x1c2a1, 0x24},//Cr1
	{0x1c2a2, 0x24},
	{0x1c2a3, 0x24},
	{0x1c2a4, 0x23},
	{0x1c2a5, 0x25},
	{0x1c2a6, 0x24},//Cr2
	{0x1c2a7, 0x23},
	{0x1c2a8, 0x21},
	{0x1c2a9, 0x23},
	{0x1c2aa, 0x23},
	{0x1c2ab, 0x23},//Cr3
	{0x1c2ac, 0x21},
	{0x1c2ad, 0x1f},
	{0x1c2ae, 0x21},
	{0x1c2af, 0x22},
	{0x1c2b0, 0x23},//Cr4
	{0x1c2b1, 0x23},
	{0x1c2b2, 0x21},
	{0x1c2b3, 0x23},
	{0x1c2b4, 0x23},
	{0x1c2b5, 0x23},//cr5
	{0x1c2b6, 0x23},
	{0x1c2b7, 0x23},
	{0x1c2b8, 0x23},
	{0x1c2b9, 0x23},

/* AWB */
	{0x66201, 0x52},
	{0x66203, 0x14},//crop window
	{0x66211, 0xe8},//awb top limit
	{0x66212, 0x04},//awb bottom limit

	{0x1c17c, 0x01},//CT mode
	{0x1c182, 0x04},
	{0x1c183, 0x00},//MinNum
	{0x1c184, 0x04},//AWB Step
	{0x1c58d, 0x00},//LimitAWBAtD65Enable

	{0x1c1be, 0x00},//AWB offset
	{0x1c1bf, 0x00},
	{0x1c1c0, 0x00},
	{0x1c1c1, 0x00},

	{0x1c1aa, 0x00},//avgAllEnable
	{0x1c1ad, 0x02},//weight of A
	{0x1c1ae, 0x06}, //weight of D65
	{0x1c1af, 0x04},//weight of CWF

	{0x1c5ac, 0x80},//pre-gain
	{0x1c5ad, 0x80},
	{0x1c5ae, 0x80},

	{0x1ccce, 0x02},//awb shift,open=02
	{0x1cccf, 0x04},//B gain for A
	{0x1ccd0, 0x04},//R gain for A
	{0x1c5b8, 0x1a},//B gain for C outdoor Richard@0517
	{0x1c5b9, 0x14},//R gain for C outdoor Richard@0517
	{0x1ccd1, 0x1a},//B gain for C indoor Richard@0517
	{0x1ccd2, 0x14},//R gain for C indoor Richard@0517
	{0x1ccd3, 0x08},//B gain for D indoor
	{0x1ccd4, 0x1c},//R gain for D indoor
	{0x1cccc, 0x08},//B gain for D outdoor
	{0x1cccd, 0x1c},//R gain for D outdoor

	// for detect indoor/outdoor awb shift on cwf light,epxo*gain>>8
	{0x1c5b4, 0x02},//C indoor/outdoor switch
	{0x1c5b5, 0xff},//C indoor/outdoor switch
	{0x1c5b6, 0x04},//C indoor/outdoor switch
	{0x1c5b7, 0xff},//C indoor/outdoor switch

	//add awb  shift detect parameter according 0x1c734~0x1c736
	{0x1ccd5, 0x38}, //CT_A, 2012.06.02 yuanyabin
	{0x1ccd6, 0x5f}, //CT_C
	{0x1ccd7, 0xa7}, //CT_D

	{0x1c5cd, 0x00},//ori0x01 high light awb shift, modified by Jiangtao to avoid blurish when high CT 0310
	{0x1c5ce, 0x00},
	{0x1c5cf, 0xf0},
	{0x1c5d0, 0x01},
	{0x1c5d1, 0x20},
	{0x1c5d2, 0x03},
	{0x1c5d3, 0x00},
	{0x1c5d4, 0x40},//
	{0x1c5d5, 0xa0},//
	{0x1c5d6, 0xb0},//
	{0x1c5d7, 0xe8},//
	{0x1c5d8, 0x40},//
	{0x1c1c2, 0x00},
	{0x1c1c3, 0x20},

	{0x66206, 0x12}, //center(cwf) window threshold D0
	{0x66207, 0x1b}, //A threshold, range DX  0x15
	{0x66208, 0x15}, //day threshold, range DY 0xd
	{0x66209, 0x85}, //CWF X
	{0x6620a, 0x6a}, //CWF Y
	{0x6620b, 0xe3}, //K_A_X2Y, a slop
	{0x6620c, 0xa5}, //K_D65_Y2X, d slop
	{0x6620d, 0x50}, //D65 Limit
	{0x6620e, 0x3b}, //A Limit
	{0x6620f, 0x76}, //D65 split
	{0x66210, 0x5b}, //A split
	{0x66201, 0x52},

	//add ccm detect parameter according 0x1c734~0x1c736
	{0x1c1c8 ,0x01}, //center CT, CWF
	{0x1c1c9 ,0x55},
	{0x1c1cc, 0x00},//daylight
	{0x1c1cd, 0xc2},
	{0x1c1d0, 0x02},//a
	{0x1c1d1, 0x3f},

	{0x1c254, 0x0 },
	{0x1c255, 0xce},
	{0x1c256, 0x0 },
	{0x1c257, 0xe7},
	{0x1c258, 0x1 },
	{0x1c259, 0x69},
	{0x1c25a, 0x1 },
	{0x1c25b, 0xd2},


/* Color matrix */
	{0x1C1d8, 0x02},//center matrix,
	{0x1C1d9, 0x18},
	{0x1C1da, 0xFF},
	{0x1C1db, 0x04},
	{0x1C1dc, 0xFF},
	{0x1C1dd, 0xE4},
	{0x1C1de, 0xFF},
	{0x1C1df, 0xDB},
	{0x1C1e0, 0x01},
	{0x1C1e1, 0xB5},
	{0x1C1e2, 0xFF},
	{0x1C1e3, 0x70},
	{0x1C1e4, 0xFF},
	{0x1C1e5, 0xEF},
	{0x1C1e6, 0xFF},
	{0x1C1e7, 0x0D},
	{0x1C1e8, 0x02},
	{0x1C1e9, 0x04},

	{0x1C1FC, 0xFF},//cmx left delta,daylight
	{0x1C1FD, 0xE7},
	{0x1C1FE, 0xFF},
	{0x1C1FF, 0xFA},
	{0x1C200, 0x00},
	{0x1C201, 0x1F},
	{0x1C202, 0xFF},
	{0x1C203, 0xAE},
	{0x1C204, 0x00},
	{0x1C205, 0x0E},
	{0x1C206, 0x00},
	{0x1C207, 0x44},
	{0x1C208, 0xFF},
	{0x1C209, 0xF1},
	{0x1C20A, 0x00},
	{0x1C20B, 0x3B},
	{0x1C20C, 0xFF},
	{0x1C20D, 0xD4},

	{0x1C220, 0x00},//cmx right delta,a light
	{0x1C221, 0x5C},
	{0x1C222, 0xFF},
	{0x1C223, 0x9E},
	{0x1C224, 0x00},
	{0x1C225, 0x06},
	{0x1C226, 0xFF},
	{0x1C227, 0xDA},
	{0x1C228, 0x00},
	{0x1C229, 0x0E},
	{0x1C22A, 0x00},
	{0x1C22B, 0x18},
	{0x1C22C, 0xFF},
	{0x1C22D, 0x7A},
	{0x1C22E, 0x01},
	{0x1C22F, 0x2E},
	{0x1C230, 0xFF},
	{0x1C231, 0x58},

	/* dpc */
	{0x65409, 0x08},
	{0x6540a, 0x08},
	{0x6540b, 0x08},
	{0x6540c, 0x08},
	{0x6540d, 0x0c},
	{0x6540e, 0x08},
	{0x6540f, 0x08},
	{0x65410, 0x08},
	{0x65408, 0x0b},

	//dynamic high gain Y curve for dark color change 20120728
	{0x1d963, 0x1a},
	{0x1d964, 0x28},
	{0x1d965, 0x33},
	{0x1d966, 0x3f},
	{0x1d967, 0x4c},
	{0x1d968, 0x59},
	{0x1d969, 0x66},
	{0x1d96a, 0x72},
	{0x1d96b, 0x7e},
	{0x1d96c, 0x8a},
	{0x1d96d, 0x96},
	{0x1d96e, 0xa4},
	{0x1d96f, 0xb5},
	{0x1d970, 0xC9},
	{0x1d971, 0xe2},
	{0x1d8fe, 0x01}, //UV cut gain control
	{0x1d8ff, 0x50}, //low gain thres
	{0x1d900, 0x70}, //high gain thres
	{0x1d97f, 0x14}, //UV cut low bright thres
	{0x1d973, 0x20}, //UV cut high bright thres
	{0x1d972, 0x00}, //adaptive gamma enable
	{0x1d974, 0x01}, //low gain gamma
	{0x1d975, 0xe6},
	{0x1d976, 0x01}, //high gain gamma
	{0x1d977, 0xc0},
	{0x1d978, 0x01}, //dark image gamma
	{0x1d979, 0xb3},
	{0x1d97a, 0x88}, //low gain slope
	{0x1d97b, 0x50}, //high gain slope
	{0x1d97c, 0x38}, //dark image slope
	{0x1d97d, 0x14}, //low bright thres
	{0x1d97e, 0x20}, //high bright thres

	{0x1d99e, 0x00}, //dynamic UV curve
	//low gain UV curve 1/2
	{0x1d904, 0x88},
	{0x1d905, 0x90},
	{0x1d906, 0x92},
	{0x1d907, 0x92},
	{0x1d908, 0x92},
	{0x1d909, 0x92},
	{0x1d90a, 0x92},
	{0x1d90b, 0x92},
	{0x1d90c, 0x92},
	{0x1d90d, 0x92},
	{0x1d90e, 0x92},
	{0x1d90f, 0x92},
	{0x1d910, 0x92},
	{0x1d911, 0x88},
	{0x1d912, 0x73},
	{0x1d913, 0x55},
	//high gain UV curve 1/2
	{0x1d914, 0x88},
	{0x1d915, 0x90},
	{0x1d916, 0x92},
	{0x1d917, 0x92},
	{0x1d918, 0x92},
	{0x1d919, 0x92},
	{0x1d91a, 0x92},
	{0x1d91b, 0x92},
	{0x1d91c, 0x92},
	{0x1d91d, 0x92},
	{0x1d91e, 0x92},
	{0x1d91f, 0x92},
	{0x1d920, 0x92},
	{0x1d921, 0x88},
	{0x1d922, 0x73},
	{0x1d923, 0x55},

	//dynamic CT AWB, huiyan 20120810 add for new firmware AWB
	{0x1d924, 0x00},//enable
	{0x1d950, 0x00},//Br thres,super highlight threshold
	{0x1d951, 0x08},//Br thres
	{0x1d952, 0x30},//Br Ratio,Ratio for transition region
	{0x1d8dc, 0x00},//Br thres0
	{0x1d8dd, 0x80},//Br thres0
	{0x1d8de, 0x44},//Br thres1
	{0x1d8df, 0x34},//Br thres1
	{0x1d8da, 0x10},//Br Ratio0
	{0x1d8db, 0x06},//Br Ratio1
	{0x1d949, 0x0f},//super highlight cwf thres //66206
	{0x1d925, 0x0f},//highlight cwf thres //66206
	{0x1d926, 0x0f},//middlelight cwf thres
	{0x1d927, 0x0f},//lowlight cwf thres
	{0x1d94a, 0x1c},//super highlight A thres //66207
	{0x1d928, 0x1c},//highlight A thres //66207
	{0x1d929, 0x1c},//middlelight A thres
	{0x1d92a, 0x22},//lowlight A thres
	{0x1d94b, 0x17},//super highlight D thres //66208
	{0x1d92b, 0x17},//highlight D thres //66208
	{0x1d92c, 0x17},//middlelight D thres
	{0x1d92d, 0x1f},//lowlight D thres
	{0x1d94c, 0x58},//super highlight D limit //6620d
	{0x1d92e, 0x58},//highlight D limit //6620d
	{0x1d92f, 0x54},//middlelight D limit
	{0x1d930, 0x4d},//lowlight D limit
	{0x1d94d, 0x42},//super highlight A limit //6620e
	{0x1d931, 0x42},//highlight A limit //6620e
	{0x1d932, 0x42},//middlelight A limit
	{0x1d933, 0x3e},//lowlight A limit
	{0x1d94e, 0x76},//super highlight D split //6620f
	{0x1d934, 0x76},//highlight D split //6620f
	{0x1d935, 0x76},//middlelight D split
	{0x1d936, 0x76},//lowlight D split
	{0x1d94f, 0x57},//super highlight A split //66210
	{0x1d937, 0x57},//highlight A split //66210
	{0x1d938, 0x57},//middlelight A split
	{0x1d939, 0x57},//lowlight A split
	{0x1d998, 0x1},
#endif
};


 const struct isp_reg_t isp_init_regs_sonyimx134_Liteon[] = {
/* BLC */
	{0x1c58b, 0xff}, //avoid false contour Richard@0323
	{0x1c58c, 0xff}, //avoid false contour Richard@0323
#ifndef OVISP_DEBUG_MODE
/* AEC */
	{0x1c146, 0x30},//ori0x30 low AE target,should close
	{0x1c14a, 0x03},
	{0x1c14b, 0x0a},
	{0x1c14c, 0x0f},//aec fast step//
	{0x1c14e, 0x08},//slow step//08
	{0x1c140, 0x01},//banding
	{0x1c13e, 0x02},//real gain mode for OV8830

	{0x66401, 0x00},//window weight
	{0x66402, 0x20},//StatWin_Left
	{0x66403, 0x00},
	{0x66404, 0x20},//StatWin_Top
	{0x66405, 0x00},
	{0x66406, 0x20},//StatWin_Right
	{0x66407, 0x00},
	{0x66408, 0x20},//StatWin_Bottom
	{0x66409, 0x00},//definiton ofthe center 3x3 window
	{0x6640a, 0x80},//nWin_Left
	{0x6640d, 0x00},
	{0x6640e, 0x70},//nWin_Top
	{0x66411, 0x03},
	{0x66412, 0xc0},//nWin_Width
	{0x66415, 0x02},
	{0x66416, 0x00},//nWin_Height
	{0x6642e, 0x01},//nWin_Weight_0 weight pass
	{0x6642f, 0x01},//nWin_Weight_1
	{0x66430, 0x01},//nWin_Weight_2
	{0x66431, 0x01},//nWin_Weight_3
	{0x66432, 0x02},//nWin_Weight_4
	{0x66433, 0x02},//nWin_Weight_5
	{0x66434, 0x02},//nWin_Weight_6
	{0x66435, 0x02},//nWin_Weight_7
	{0x66436, 0x04},//nWin_Weight_8
	{0x66437, 0x02},//nWin_Weight_9
	{0x66438, 0x02},//nWin_Weight_10
	{0x66439, 0x02},//nWin_Weight_11
	{0x6643a, 0x02},//nWin_Weight_12
	{0x6644e, 0x03},//nWin_Weight_Shift
	{0x6644f, 0x04},//black level
	{0x66450, 0xf8},//saturate level
	{0x6645b, 0x1a},//black weight1
	{0x6645d, 0x1a},//black weight2
	{0x66460, 0x04},//saturate per1
	{0x66464, 0x0a},//saturate per2
	{0x66467, 0x14},//saturate weight1
	{0x66469, 0x14},//saturate weight2
	//auto AE control

/* Raw Stretch */
	{0x65020, 0x00},//RAW Stretch Target0x01-->00
	{0x66500, 0x28},
	{0x66501, 0x00},
	{0x66502, 0x8f},//0xff
	{0x66503, 0x0b},//0x0f
	{0x1c1b0, 0xff},
	{0x1c1b1, 0xff},
	{0x1c1b2, 0x01},
	{0x65905, 0x08},
	{0x66301, 0x02},//high level step
	{0x66302, 0xe0},//ref bin
	{0x66303, 0x06},//PsPer0 0a
	{0x66304, 0x10},//PsPer1
	{0x1c5a4, 0x01},//use new high stretch
	{0x1c5a5, 0x20},//stretch low step
	{0x1c5a6, 0x20},//stretch high step
	{0x1c5a7, 0x08},//stretch slow range
	{0x1c5a8, 0x02},//stretch slow step
	{0x1c1b8, 0x10},//ratio scale

	{0x1c5a2, 0x04},//target stable range
	{0x1c5a3, 0x06},//stretch target slow range

/* De-noise */
	{0x65604, 0x00},//Richard for new curve 0314
	{0x65605, 0x00},//Richard for new curve 0314
	{0x65606, 0x00},//Richard for new curve 0314
	{0x65607, 0x00},//Richard for new curve 0314

	{0x65510, 0x0C},//G dns slope change from 0x4 to 0xf Richard 0320
	{0x6551a, 0x02},//Raw G Dns improve white pixel 20120728
	{0x6551b, 0x02},//gain  2X
	{0x6551c, 0x04},//gain  4X
	{0x6551d, 0x08},//gain  8X
	{0x6551e, 0x0c},//gain 16X
	{0x6551f, 0x16},//gain 32X
	{0x65520, 0x16},//gain 64X
	{0x65522, 0x00},//RAW BR De-noise
	{0x65523, 0x02},//gain 1X
	{0x65524, 0x00},
	{0x65525, 0x04},//gain 2X
	{0x65526, 0x00},
	{0x65527, 0x08},//gain 4X
	{0x65528, 0x00},
	{0x65529, 0x10},//gain 8X
	{0x6552a, 0x00},
	{0x6552b, 0x20},//gain 16X
	{0x6552c, 0x00},
	{0x6552d, 0x20},//gain 32X
	{0x6552e, 0x00},
	{0x6552f, 0x20},//gain 64X

	{0x65c00, 0x03},//UV De-noise: gain 1X
	{0x65c01, 0x05},//gain 2X
	{0x65c02, 0x08},//gain 4X
	{0x65c03, 0x1f},//gain 8X
	{0x65c04, 0x1f},//gain 16X
	{0x65c05, 0x1f},//gain 32X

/* sharpeness */
	{0x65600, 0x00},
	{0x65601, 0x30},//0319
	{0x65602, 0x00},
	{0x65603, 0x60}, //y00215412 change sharpness high gain threshod 0x40->0x60 20120814
	{0x65608, 0x06},
	{0x65609, 0x20},
	{0x6560c, 0x00},
	{0x6560d, 0x08}, //low gain sharpness, 20120814 0x20->0x30
	{0x6560e, 0x10},//MinSharpenTp
	{0x6560f, 0x60},//MaxSharpenTp
	{0x65610, 0x10},//MinSharpenTm
	{0x65611, 0x60},//MaxSharpenTm
	{0x65613, 0x10},//SharpenAlpha
	{0x65615, 0x08},//HFreq_thre
	{0x65617, 0x06},//HFreq_coef

/* auto uv saturation */
	{0x1c4e8, 0x00},//Enable
	{0x1c4e9, 0xbf},// gain threshold1 40-->0b
	{0x1c4ea, 0xf7},//gain threshold2 78-->0d
	{0x1c4eb, 0x90}, //UV max saturation
	{0x1c4ec, 0x80}, //UV min saturation

/* Global Gamma */
	{0x1c49b, 0x01},
	{0x1c49c, 0x02},
	{0x1c49d, 0x01}, //gamma 2.0 0310
	{0x1c49e, 0x02},
	{0x1c49f, 0x01}, //gamma 2.0 0310
	{0x1c4a0, 0x00},
	{0x1c4a1, 0x18},
	{0x1c4a2, 0x00},
	{0x1c4a3, 0x88}, //gamma 2.0 0310 //avoid false contour Richard@0323


/* Tone Mapping */
	//contrast curve change for skin over exposure 20120728
       {0x1C4C0, 0x1a},
	{0x1C4C1, 0x28},
	{0x1C4C2, 0x33},
	{0x1C4C3, 0x3f},
	{0x1C4C4, 0x4c},
	{0x1C4C5, 0x59},
	{0x1C4C6, 0x66},
	{0x1C4C7, 0x72},
	{0x1C4C8, 0x7e},
	{0x1C4C9, 0x8a},
	{0x1C4CA, 0x96},
	{0x1C4CB, 0xa4},
	{0x1C4CC, 0xb5},
	{0x1C4CD, 0xC9},
	{0x1C4CE, 0xe2},
	{0x1c4d4, 0x20},//EDR scale
	{0x1c4d5, 0x20},//EDR scale
	{0x1c4cf, 0x80},
	{0x65a00, 0x1b},
	{0x65a01, 0xc0}, //huiyan 0801

	//dark boost
	{0x1c4b0, 0x02},
	{0x1c4b1, 0x80},

	//YUV curve gain control,expoure frist
	{0x1c1b3, 0x40}, //Gain thre1
	{0x1c1b4, 0x70}, //Gain thre2
	{0x1c1b5, 0x01}, //EDR gain control
	{0x1c1b6, 0x01}, //Curve Gain control
	{0x1c1b7, 0x40}, //after gamma cut ratio

	//Manual UV curve
	{0x1C998, 0x01},
	{0x1C999, 0x10},
	{0x1C99A, 0x01},
	{0x1C99B, 0x23},
	{0x1C99C, 0x01},
	{0x1C99D, 0x28},
	{0x1C99E, 0x01},
	{0x1C99F, 0x28},
	{0x1C9A0, 0x01},
	{0x1C9A1, 0x28},
	{0x1C9A2, 0x01},
	{0x1C9A3, 0x28},
	{0x1C9A4, 0x01},
	{0x1C9A5, 0x28},
	{0x1C9A6, 0x01},
	{0x1C9A7, 0x28},
	{0x1C9A8, 0x01},
	{0x1C9A9, 0x28},
	{0x1C9AA, 0x01},
	{0x1C9AB, 0x28},
	{0x1C9AC, 0x01},
	{0x1C9AD, 0x28},
	{0x1C9AE, 0x01},
	{0x1C9AF, 0x28},
	{0x1C9B0, 0x01},
	{0x1C9B1, 0x28},
	{0x1C9B2, 0x01},
	{0x1C9B3, 0x20},
	{0x1C9B4, 0x00},
	{0x1C9B5, 0xe8},
	{0x1C9B6, 0x00},
	{0x1C9B7, 0xaa},

/* LENC */
	{0x1c247, 0x00},//three profile,color temperature based lens shading correction mode 1: enable 0: disable
	{0x1c24c, 0x00},
	{0x1c24d, 0x40},
	{0x1c24e, 0x00},
	{0x1c24f, 0x80},
	{0x1c248, 0x40},
	{0x1c24a, 0x20},
	{0x1c574, 0x00},
	{0x1c575, 0x20},
	{0x1c576, 0x00},
	{0x1c577, 0xf0},
	{0x1c578, 0x40},

	{0x65200, 0x0d},
	{0x65206, 0x3c},
	{0x65207, 0x04},
	{0x65208, 0x3c},
	{0x65209, 0x04},
	{0x6520a, 0x33},
	{0x6520b, 0x0c},
	{0x65214, 0x28},
	{0x65216, 0x20},
	{0x1d93d, 0x08},
	{0x1d93e, 0x00},
	{0x1d93f, 0x40},

	{0x1d940, 0xfc},
	{0x1d942, 0x04},
	{0x1d941, 0xfc},
	{0x1d943, 0x04},

	{0x1d944, 0x00},
	{0x1d946, 0x00},
	{0x1d945, 0xfc},
	{0x1d947, 0x04},

/* OVISP LENC setting for D65 Long Exposure (HDR/3D) */
	//Y channel re-back to old version(do not plus 8) 20120821 by y00215412
	{0x1c264, 0x2f}, //Y1
	{0x1c265, 0x1f},
	{0x1c266, 0x19},
	{0x1c267, 0x1a},
	{0x1c268, 0x1e},
	{0x1c269, 0x2d},
	{0x1c26a, 0x17},//Y2
	{0x1c26b, 0xc },
	{0x1c26c, 0x8 },
	{0x1c26d, 0x8 },
	{0x1c26e, 0xd },
	{0x1c26f, 0x15},
	{0x1c270, 0xd },//Y3
	{0x1c271, 0x5 },
	{0x1c272, 0x0 },
	{0x1c273, 0x0 },
	{0x1c274, 0x4 },
	{0x1c275, 0xe },
	{0x1c276, 0xe },//Y4
	{0x1c277, 0x4 },
	{0x1c278, 0x0 },
	{0x1c279, 0x0 },
	{0x1c27a, 0x4 },
	{0x1c27b, 0xe },
	{0x1c27c, 0x16},//Y5
	{0x1c27d, 0xc },
	{0x1c27e, 0x8 },
	{0x1c27f, 0x8 },
	{0x1c280, 0xc },
	{0x1c281, 0x16},
	{0x1c282, 0x33},//Y6
	{0x1c283, 0x1f},
	{0x1c284, 0x1a},
	{0x1c285, 0x1a},
	{0x1c286, 0x1f},
	{0x1c287, 0x31},
	{0x1c288, 0x1d},//Cb1
	{0x1c289, 0x1d},
	{0x1c28a, 0x1c},
	{0x1c28b, 0x1d},
	{0x1c28c, 0x1d},
	{0x1c28d, 0x1e},//Cb2
	{0x1c28e, 0x1d},
	{0x1c28f, 0x1e},
	{0x1c290, 0x1d},
	{0x1c291, 0x1d},
	{0x1c292, 0x1c},//Cb3
	{0x1c293, 0x20},
	{0x1c294, 0x21},
	{0x1c295, 0x1f},
	{0x1c296, 0x1c},
	{0x1c297, 0x1e},//Cb4
	{0x1c298, 0x1e},
	{0x1c299, 0x1e},
	{0x1c29a, 0x1e},
	{0x1c29b, 0x1d},
	{0x1c29c, 0x1d},//Cb5
	{0x1c29d, 0x1e},
	{0x1c29e, 0x1d},
	{0x1c29f, 0x1e},
	{0x1c2a0, 0x1d},
	{0x1c2a1, 0x24},//Cr1
	{0x1c2a2, 0x24},
	{0x1c2a3, 0x24},
	{0x1c2a4, 0x23},
	{0x1c2a5, 0x25},
	{0x1c2a6, 0x24},//Cr2
	{0x1c2a7, 0x23},
	{0x1c2a8, 0x21},
	{0x1c2a9, 0x23},
	{0x1c2aa, 0x23},
	{0x1c2ab, 0x23},//Cr3
	{0x1c2ac, 0x21},
	{0x1c2ad, 0x1f},
	{0x1c2ae, 0x21},
	{0x1c2af, 0x22},
	{0x1c2b0, 0x23},//Cr4
	{0x1c2b1, 0x23},
	{0x1c2b2, 0x21},
	{0x1c2b3, 0x23},
	{0x1c2b4, 0x23},
	{0x1c2b5, 0x23},//cr5
	{0x1c2b6, 0x23},
	{0x1c2b7, 0x23},
	{0x1c2b8, 0x23},
	{0x1c2b9, 0x23},

/* AWB */
	{0x66201, 0x52},
	{0x66203, 0x14},//crop window
	{0x66211, 0xe8},//awb top limit
	{0x66212, 0x04},//awb bottom limit

	{0x1c17c, 0x01},//CT mode
	{0x1c182, 0x04},
	{0x1c183, 0x00},//MinNum
	{0x1c184, 0x04},//AWB Step
	{0x1c58d, 0x00},//LimitAWBAtD65Enable

	{0x1c1be, 0x00},//AWB offset
	{0x1c1bf, 0x00},
	{0x1c1c0, 0x00},
	{0x1c1c1, 0x00},

	{0x1c1aa, 0x00},//avgAllEnable
	{0x1c1ad, 0x02},//weight of A
	{0x1c1ae, 0x06}, //weight of D65
	{0x1c1af, 0x04},//weight of CWF

	{0x1c5ac, 0x80},//pre-gain
	{0x1c5ad, 0x80},
	{0x1c5ae, 0x80},

	{0x1ccce, 0x02},//awb shift,open=02
	{0x1cccf, 0x04},//B gain for A
	{0x1ccd0, 0x04},//R gain for A
	{0x1c5b8, 0x1a},//B gain for C outdoor Richard@0517
	{0x1c5b9, 0x14},//R gain for C outdoor Richard@0517
	{0x1ccd1, 0x1a},//B gain for C indoor Richard@0517
	{0x1ccd2, 0x14},//R gain for C indoor Richard@0517
	{0x1ccd3, 0x08},//B gain for D indoor
	{0x1ccd4, 0x1c},//R gain for D indoor
	{0x1cccc, 0x08},//B gain for D outdoor
	{0x1cccd, 0x1c},//R gain for D outdoor

	// for detect indoor/outdoor awb shift on cwf light,epxo*gain>>8
	{0x1c5b4, 0x02},//C indoor/outdoor switch
	{0x1c5b5, 0xff},//C indoor/outdoor switch
	{0x1c5b6, 0x04},//C indoor/outdoor switch
	{0x1c5b7, 0xff},//C indoor/outdoor switch

	//add awb  shift detect parameter according 0x1c734~0x1c736
	{0x1ccd5, 0x38}, //CT_A, 2012.06.02 yuanyabin
	{0x1ccd6, 0x5f}, //CT_C
	{0x1ccd7, 0xa7}, //CT_D

	{0x1c5cd, 0x00},//ori0x01 high light awb shift, modified by Jiangtao to avoid blurish when high CT 0310
	{0x1c5ce, 0x00},
	{0x1c5cf, 0xf0},
	{0x1c5d0, 0x01},
	{0x1c5d1, 0x20},
	{0x1c5d2, 0x03},
	{0x1c5d3, 0x00},
	{0x1c5d4, 0x40},//
	{0x1c5d5, 0xa0},//
	{0x1c5d6, 0xb0},//
	{0x1c5d7, 0xe8},//
	{0x1c5d8, 0x40},//
	{0x1c1c2, 0x00},
	{0x1c1c3, 0x20},

	{0x66206, 0x12}, //center(cwf) window threshold D0
	{0x66207, 0x1b}, //A threshold, range DX  0x15
	{0x66208, 0x15}, //day threshold, range DY 0xd
	{0x66209, 0x85}, //CWF X
	{0x6620a, 0x6a}, //CWF Y
	{0x6620b, 0xe3}, //K_A_X2Y, a slop
	{0x6620c, 0xa5}, //K_D65_Y2X, d slop
	{0x6620d, 0x50}, //D65 Limit
	{0x6620e, 0x3b}, //A Limit
	{0x6620f, 0x76}, //D65 split
	{0x66210, 0x5b}, //A split
	{0x66201, 0x52},

	//add ccm detect parameter according 0x1c734~0x1c736
	{0x1c1c8 ,0x01}, //center CT, CWF
	{0x1c1c9 ,0x55},
	{0x1c1cc, 0x00},//daylight
	{0x1c1cd, 0xc2},
	{0x1c1d0, 0x02},//a
	{0x1c1d1, 0x3f},

	{0x1c254, 0x0 },
	{0x1c255, 0xce},
	{0x1c256, 0x0 },
	{0x1c257, 0xe7},
	{0x1c258, 0x1 },
	{0x1c259, 0x69},
	{0x1c25a, 0x1 },
	{0x1c25b, 0xd2},


/* Color matrix */
	{0x1C1d8, 0x02},//center matrix,
	{0x1C1d9, 0x18},
	{0x1C1da, 0xFF},
	{0x1C1db, 0x04},
	{0x1C1dc, 0xFF},
	{0x1C1dd, 0xE4},
	{0x1C1de, 0xFF},
	{0x1C1df, 0xDB},
	{0x1C1e0, 0x01},
	{0x1C1e1, 0xB5},
	{0x1C1e2, 0xFF},
	{0x1C1e3, 0x70},
	{0x1C1e4, 0xFF},
	{0x1C1e5, 0xEF},
	{0x1C1e6, 0xFF},
	{0x1C1e7, 0x0D},
	{0x1C1e8, 0x02},
	{0x1C1e9, 0x04},

	{0x1C1FC, 0xFF},//cmx left delta,daylight
	{0x1C1FD, 0xE7},
	{0x1C1FE, 0xFF},
	{0x1C1FF, 0xFA},
	{0x1C200, 0x00},
	{0x1C201, 0x1F},
	{0x1C202, 0xFF},
	{0x1C203, 0xAE},
	{0x1C204, 0x00},
	{0x1C205, 0x0E},
	{0x1C206, 0x00},
	{0x1C207, 0x44},
	{0x1C208, 0xFF},
	{0x1C209, 0xF1},
	{0x1C20A, 0x00},
	{0x1C20B, 0x3B},
	{0x1C20C, 0xFF},
	{0x1C20D, 0xD4},

	{0x1C220, 0x00},//cmx right delta,a light
	{0x1C221, 0x5C},
	{0x1C222, 0xFF},
	{0x1C223, 0x9E},
	{0x1C224, 0x00},
	{0x1C225, 0x06},
	{0x1C226, 0xFF},
	{0x1C227, 0xDA},
	{0x1C228, 0x00},
	{0x1C229, 0x0E},
	{0x1C22A, 0x00},
	{0x1C22B, 0x18},
	{0x1C22C, 0xFF},
	{0x1C22D, 0x7A},
	{0x1C22E, 0x01},
	{0x1C22F, 0x2E},
	{0x1C230, 0xFF},
	{0x1C231, 0x58},

	/* dpc */
	{0x65409, 0x08},
	{0x6540a, 0x08},
	{0x6540b, 0x08},
	{0x6540c, 0x08},
	{0x6540d, 0x0c},
	{0x6540e, 0x08},
	{0x6540f, 0x08},
	{0x65410, 0x08},
	{0x65408, 0x0b},

	//dynamic high gain Y curve for dark color change 20120728
	{0x1d963, 0x1a},
	{0x1d964, 0x28},
	{0x1d965, 0x33},
	{0x1d966, 0x3f},
	{0x1d967, 0x4c},
	{0x1d968, 0x59},
	{0x1d969, 0x66},
	{0x1d96a, 0x72},
	{0x1d96b, 0x7e},
	{0x1d96c, 0x8a},
	{0x1d96d, 0x96},
	{0x1d96e, 0xa4},
	{0x1d96f, 0xb5},
	{0x1d970, 0xC9},
	{0x1d971, 0xe2},
	{0x1d8fe, 0x01}, //UV cut gain control
	{0x1d8ff, 0x50}, //low gain thres
	{0x1d900, 0x70}, //high gain thres
	{0x1d97f, 0x14}, //UV cut low bright thres
	{0x1d973, 0x20}, //UV cut high bright thres
	{0x1d972, 0x00}, //adaptive gamma enable
	{0x1d974, 0x01}, //low gain gamma
	{0x1d975, 0xe6},
	{0x1d976, 0x01}, //high gain gamma
	{0x1d977, 0xc0},
	{0x1d978, 0x01}, //dark image gamma
	{0x1d979, 0xb3},
	{0x1d97a, 0x88}, //low gain slope
	{0x1d97b, 0x50}, //high gain slope
	{0x1d97c, 0x38}, //dark image slope
	{0x1d97d, 0x14}, //low bright thres
	{0x1d97e, 0x20}, //high bright thres

	{0x1d99e, 0x00}, //dynamic UV curve
	//low gain UV curve 1/2
	{0x1d904, 0x88},
	{0x1d905, 0x90},
	{0x1d906, 0x92},
	{0x1d907, 0x92},
	{0x1d908, 0x92},
	{0x1d909, 0x92},
	{0x1d90a, 0x92},
	{0x1d90b, 0x92},
	{0x1d90c, 0x92},
	{0x1d90d, 0x92},
	{0x1d90e, 0x92},
	{0x1d90f, 0x92},
	{0x1d910, 0x92},
	{0x1d911, 0x88},
	{0x1d912, 0x73},
	{0x1d913, 0x55},
	//high gain UV curve 1/2
	{0x1d914, 0x88},
	{0x1d915, 0x90},
	{0x1d916, 0x92},
	{0x1d917, 0x92},
	{0x1d918, 0x92},
	{0x1d919, 0x92},
	{0x1d91a, 0x92},
	{0x1d91b, 0x92},
	{0x1d91c, 0x92},
	{0x1d91d, 0x92},
	{0x1d91e, 0x92},
	{0x1d91f, 0x92},
	{0x1d920, 0x92},
	{0x1d921, 0x88},
	{0x1d922, 0x73},
	{0x1d923, 0x55},

	//dynamic CT AWB, huiyan 20120810 add for new firmware AWB
	{0x1d924, 0x00},//enable
	{0x1d950, 0x00},//Br thres,super highlight threshold
	{0x1d951, 0x08},//Br thres
	{0x1d952, 0x30},//Br Ratio,Ratio for transition region
	{0x1d8dc, 0x00},//Br thres0
	{0x1d8dd, 0x80},//Br thres0
	{0x1d8de, 0x44},//Br thres1
	{0x1d8df, 0x34},//Br thres1
	{0x1d8da, 0x10},//Br Ratio0
	{0x1d8db, 0x06},//Br Ratio1
	{0x1d949, 0x0f},//super highlight cwf thres //66206
	{0x1d925, 0x0f},//highlight cwf thres //66206
	{0x1d926, 0x0f},//middlelight cwf thres
	{0x1d927, 0x0f},//lowlight cwf thres
	{0x1d94a, 0x1c},//super highlight A thres //66207
	{0x1d928, 0x1c},//highlight A thres //66207
	{0x1d929, 0x1c},//middlelight A thres
	{0x1d92a, 0x22},//lowlight A thres
	{0x1d94b, 0x17},//super highlight D thres //66208
	{0x1d92b, 0x17},//highlight D thres //66208
	{0x1d92c, 0x17},//middlelight D thres
	{0x1d92d, 0x1f},//lowlight D thres
	{0x1d94c, 0x58},//super highlight D limit //6620d
	{0x1d92e, 0x58},//highlight D limit //6620d
	{0x1d92f, 0x54},//middlelight D limit
	{0x1d930, 0x4d},//lowlight D limit
	{0x1d94d, 0x42},//super highlight A limit //6620e
	{0x1d931, 0x42},//highlight A limit //6620e
	{0x1d932, 0x42},//middlelight A limit
	{0x1d933, 0x3e},//lowlight A limit
	{0x1d94e, 0x76},//super highlight D split //6620f
	{0x1d934, 0x76},//highlight D split //6620f
	{0x1d935, 0x76},//middlelight D split
	{0x1d936, 0x76},//lowlight D split
	{0x1d94f, 0x57},//super highlight A split //66210
	{0x1d937, 0x57},//highlight A split //66210
	{0x1d938, 0x57},//middlelight A split
	{0x1d939, 0x57},//lowlight A split
	{0x1d998, 0x1},
#endif
};
#endif
static vcm_info_s vcm_dw9714_Sunny = {
	.vcm_type = VCM_DW9714_Sunny,
	.offsetInit = 0, /* maybe different in each AF mode */
	.fullRange = 1023, /* maybe different in each AF mode */

	.infiniteDistance = 0x70, /* should be calibrated */
	.normalDistanceEnd = 0x1d0,
	.normalStep = 0x10, /* coarse step */
	.normalStrideRatio = 0x20,
	.videoDistanceEnd = 0x160,
	.videoStep = 0x10,
	.videoStrideRatio = 0x18,

	.strideOffset = 0x80,  /* large stride will start at (infiniteDistance+videoStrideOffset), this value must common multiple of videoStep and normalStep*/

	.vcm_bits = 9,
	.vcm_id = 0x18,
	/* moveLensAddr can be ommitted for DW9714 */
	.moveLensAddr[0] = 0,
	.moveLensAddr[1] = 0,

	/*
	 * fixed params
	 * coarseStep/fineStep will be calculated by other params
	 */
	.motorResTime = 10,
	.motorDelayTime = 15,
	.strideDivideOffset = 0x60,
	.startCurrentOffset = 0x60,
	
	.moveRange = RANGE_NORMAL,
};

static vcm_info_s vcm_dw9714_Liteon = {
	.vcm_type = VCM_DW9714_Liteon,
	.offsetInit = 0, /* maybe different in each AF mode */
	.fullRange = 1023, /* maybe different in each AF mode */


	.infiniteDistance = 0x70, /* should be calibrated */
	.normalDistanceEnd = 0x200,
	.normalStep = 0x10, /* coarse step */
	.normalStrideRatio = 0x20,
	.videoDistanceEnd = 0x180,
	.videoStep = 0x10,
	.videoStrideRatio = 0x18,

	.strideOffset = 0x80,  /* large stride will start at (infiniteDistance+videoStrideOffset), this value must common multiple of videoStep and normalStep*/

	.vcm_bits = 9,
	.vcm_id = 0x18,
	/* moveLensAddr can be ommitted for DW9714 */
	.moveLensAddr[0] = 0,
	.moveLensAddr[1] = 0,

	/*
	 * fixed params
	 * coarseStep/fineStep will be calculated by other params
	 */
	.motorResTime = 10,
	.motorDelayTime = 15,
	.strideDivideOffset = 0x60,	

	.startCurrentOffset = 0x40,
	.moveRange = RANGE_NORMAL,
};
#endif
